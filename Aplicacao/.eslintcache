[{"/Users/arleysouto/Documents/Aplicacao/src/index.js":"1","/Users/arleysouto/Documents/Aplicacao/src/reportWebVitals.js":"2","/Users/arleysouto/Documents/Aplicacao/src/App.js":"3","/Users/arleysouto/Documents/Aplicacao/src/components/rotas.js":"4","/Users/arleysouto/Documents/Aplicacao/src/components/SideBar/index.js":"5","/Users/arleysouto/Documents/Aplicacao/src/components/Header/index.js":"6","/Users/arleysouto/Documents/Aplicacao/src/components/Menu/index.js":"7","/Users/arleysouto/Documents/Aplicacao/src/components/SideBar/SidebarData.js":"8","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Map/index.js":"9","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Graph/index.js":"10","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Table/index.js":"11","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Indicator/index.js":"12","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Home/index.js":"13","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/index.js":"14","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/reportWebVitals.js":"15","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/App.js":"16","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SideBar/index.js":"17","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/Header/index.js":"18","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/rotas.js":"19","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Indicator/index.js":"20","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Graph/index.js":"21","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Home/index.js":"22","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Table/index.js":"23","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Map/index.js":"24","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Connections/api.js":"25","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/index.js":"26","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/rootReducer.js":"27","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/Devices/reducer.js":"28","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/Devices/actions.js":"29","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/CadastroEvery/index.js":"30","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/CadastroVariaveis/index.js":"31","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SelectDeviceCombo/index.js":"32","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SideBar/SidebarData.js":"33"},{"size":548,"mtime":1611852530590,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1611676684393,"results":"36","hashOfConfig":"35"},{"size":392,"mtime":1612475667941,"results":"37","hashOfConfig":"35"},{"size":687,"mtime":1612204599457,"results":"38","hashOfConfig":"35"},{"size":1436,"mtime":1612290503258,"results":"39","hashOfConfig":"35"},{"size":698,"mtime":1612370886680,"results":"40","hashOfConfig":"35"},{"size":1237,"mtime":1612370822724,"results":"41","hashOfConfig":"35"},{"size":982,"mtime":1612206528389,"results":"42","hashOfConfig":"35"},{"size":130,"mtime":1612473930022,"results":"43","hashOfConfig":"35"},{"size":1223,"mtime":1612382188051,"results":"44","hashOfConfig":"35"},{"size":995,"mtime":1611864341329,"results":"45","hashOfConfig":"35"},{"size":1242,"mtime":1612461949130,"results":"46","hashOfConfig":"35"},{"size":3796,"mtime":1612461391099,"results":"47","hashOfConfig":"35"},{"size":548,"mtime":1611852530000,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":1611676684000,"results":"50","hashOfConfig":"49"},{"size":595,"mtime":1618757170000,"results":"51","hashOfConfig":"49"},{"size":1435,"mtime":1618721714000,"results":"52","hashOfConfig":"49"},{"size":646,"mtime":1618944956221,"results":"53","hashOfConfig":"49"},{"size":880,"mtime":1618054055000,"results":"54","hashOfConfig":"49"},{"size":7155,"mtime":1618936938793,"results":"55","hashOfConfig":"49"},{"size":3966,"mtime":1618937689601,"results":"56","hashOfConfig":"49"},{"size":11707,"mtime":1618939535012,"results":"57","hashOfConfig":"49"},{"size":2762,"mtime":1618936809770,"results":"58","hashOfConfig":"49"},{"size":3038,"mtime":1618725295000,"results":"59","hashOfConfig":"49"},{"size":158,"mtime":1618758658000,"results":"60","hashOfConfig":"49"},{"size":148,"mtime":1617726932000,"results":"61","hashOfConfig":"49"},{"size":142,"mtime":1617632921000,"results":"62","hashOfConfig":"49"},{"size":907,"mtime":1618837688000,"results":"63","hashOfConfig":"49"},{"size":565,"mtime":1618747457000,"results":"64","hashOfConfig":"49"},{"size":7321,"mtime":1618935169428,"results":"65","hashOfConfig":"49"},{"size":9422,"mtime":1618935222144,"results":"66","hashOfConfig":"49"},{"size":4807,"mtime":1618945213546,"results":"67","hashOfConfig":"49"},{"size":780,"mtime":1618935300856,"results":"68","hashOfConfig":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"itf7b",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"1oiixdr",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"103"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"103"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"103"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"103"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"103"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"103"},"/Users/arleysouto/Documents/Aplicacao/src/index.js",[],["150","151"],"/Users/arleysouto/Documents/Aplicacao/src/reportWebVitals.js",[],"/Users/arleysouto/Documents/Aplicacao/src/App.js",["152","153"],"import { BrowserRouter } from 'react-router-dom';\nimport React from 'react'\n\nimport Routers from '../src/components/rotas';\nimport Header from '../src/components/Header';\nimport Side from '../src/components/SideBar';\nimport Menu from '../src/components/Menu'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routers />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/arleysouto/Documents/Aplicacao/src/components/rotas.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/SideBar/index.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/Header/index.js",["154"],"import React, {useState} from 'react';\nimport './styles.css';\nimport {Dropdown} from 'react-bootstrap';\nimport './styles.css';\nimport Menu from '../Menu'\n\nexport default function Header(){  \n    return(\n        <header className=\"container\">\n            <Menu/>\n        \n            <Dropdown>\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">Devices</Dropdown.Toggle>\n                <Dropdown.Menu>\n                    <Dropdown.Item>Device 1</Dropdown.Item>\n                    <Dropdown.Item>Device 2</Dropdown.Item>\n                    <Dropdown.Item>Device 3</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n            \n        </header>\n    )\n}","/Users/arleysouto/Documents/Aplicacao/src/components/Menu/index.js",["155","156","157","158"],"import React from 'react';\nimport { Navbar, Nav, Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\nimport Logo from '../assets/logo.svg'\nimport './styles.css'\n\nexport default function Menu() {\n    return (\n\n            <Navbar collapseOnSelect expand='lg'>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Link to=\"/\">\n                    <img src={Logo} width=\"100\" height=\"100\" />\n                </Link>\n                    <Nav className=\"mr-auto\">\n                        <Link className=\"link\" to=\"/\" style={{ textDecoration: 'none' }}>Home</Link>\n                        <Link className=\"link\" to=\"/tabela\" style={{ textDecoration: 'none' }}>Informações</Link>\n                        <Link className=\"link\" to=\"/graph\" style={{ textDecoration: 'none' }}>Gráfico</Link>\n                        <Link className=\"link\" to=\"/indicator\" style={{ textDecoration: 'none' }}>Indicador</Link>\n                        <Link className=\"link\" to=\"/map\" style={{ textDecoration: 'none' }}>Mapa</Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n\n        \n    )\n}","/Users/arleysouto/Documents/Aplicacao/src/components/SideBar/SidebarData.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Map/index.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Graph/index.js",["159","160"],"import React from 'react';\nimport { Chart, Row, Col } from 'react-google-charts'\nimport { Container } from 'react-bootstrap';\n\nexport default function Graph() {\n    return (\n        <Container fluid>\n            <Chart\n                width={'100%'}\n                height={'470px'}\n                chartType=\"LineChart\"\n                loader={<div>Carregando</div>}\n                data={\n                    [\n                        ['x', 'Cachorro'],\n                        [0, 0],\n                        [1, 10],\n                        [2, 23],\n                        [3, 17],\n                        [4, 18],\n                        [5, 9],\n                        [6, 11],\n                        [7, 27],\n                        [8, 33],\n                        [9, 40],\n                        [10, 32],\n                        [11, 35],\n                    ]\n                }\n                options={{\n                    hAxis: {\n                        title: 'Tempo'\n                    },\n                    vAxis: {\n                        title: 'Popularidade'\n                    },\n                }}\n                rootProps={{ 'data-testid': '1' }}\n            />\n\n\n        </Container>\n    )\n}","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Table/index.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Indicator/index.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Home/index.js",["161","162","163"],"import React, { useState, useEffect } from 'react';\nimport { Col, Row, Container, CardDeck, Card, Jumbotron } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { BsClipboardData, BsGraphUp } from 'react-icons/bs'\nimport { AiOutlineInfoCircle } from 'react-icons/ai'\nimport {SiOpenstreetmap} from 'react-icons/si'\nimport {RiAddFill} from 'react-icons/ri'\nimport Graph from '../../Pages/Graph';\nimport './styles.css';\n\nexport default function Home() {\n    const [navigation, setNavigation] = useState([\n        { id: '1', title: 'Adicionar dispositivo', info: 'Cadastrar novo didpositivo', icon: <RiAddFill size={40} />, nav: '/tabela' },\n        { id: '2', title: 'Indicador', info: 'Informações do Dispositivo', icon: <AiOutlineInfoCircle size={50} />, nav: '/indicator' },\n        { id: '3', title: 'Localizações dos dispositivos', info: 'Localização', icon: <SiOpenstreetmap size={50} />, nav: '/graph' },\n    ]);\n\n    useEffect(() => {\n\n    }, [])\n\n\n\n    return (\n\n\n        <Container fluid>\n            <Row lg={true}>\n                <Col lg='3' >\n                    <Jumbotron>\n                        <CardDeck style={{ textAlign: 'center' }}>\n                            {navigation.map(dados => (\n                                <Link to={dados.nav} style={{ textDecoration: 'none' }}>\n                                    <Card style={{ marginBottom: '5%' }}>\n                                        <Card.Body>\n                                            <Card.Title>{dados.title}</Card.Title>\n                                            {dados.icon}\n                                            <Card.Text>\n                                                {dados.info}\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                </Link>\n                            ))}\n                        </CardDeck>\n                    </Jumbotron>\n\n                </Col>\n                <Col>\n                    <div className=\"info\">\n                        <CardDeck>\n                            <Card bg=\"danger\" text='light'>\n                                <Card.Body>\n                                    <Card.Title>Temperatura</Card.Title>\n                                    <Card.Text>\n                                    <h1><strong>41ºC</strong></h1>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                            <Card bg=\"light\">\n                                <Card.Body>\n                                    <Card.Title>Humidade</Card.Title>\n                                    <Card.Text>\n                                    <h1><strong>30%</strong></h1>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                            <Card bg=\"success\" text='light'>\n                                <Card.Body>\n                                    <Card.Title>Bateria</Card.Title>\n                                    <Card.Text>\n                                    <h1><strong>90%</strong></h1>\n                                    </Card.Text>\n\n                                </Card.Body>\n                            </Card>\n                        </CardDeck>\n                        <br></br>\n                        <Card>\n                            <Card.Body>\n                                <Card.Title>Gráfico</Card.Title>\n                                <Graph/>\n                            </Card.Body>\n                        </Card>\n\n\n                    </div>\n                </Col>\n            </Row>\n        </Container >\n\n\n\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/index.js",[],["164","165"],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/reportWebVitals.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/App.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SideBar/index.js",["166"],"import React, {useState} from 'react';\nimport {Nav} from 'react-bootstrap';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport {Link} from 'react-router-dom';\nimport {SidebarData} from './SidebarData';\nimport { IconContext } from 'react-icons';\nimport {GiHamburgerMenu} from 'react-icons/gi'\nimport './styles.css';\n\nexport default function Sidebar(){\n    const [sidebar, setSaidebar] = useState(false);\n\n    const showSidebar = () => setSaidebar(!sidebar)\n\n    return(\n        \n          <IconContext.Provider value={{ color: '#FFF' }}>\n        <div>\n          <Link to='#' >\n            <GiHamburgerMenu size={35} onClick={showSidebar} />\n          </Link>\n        </div>\n        <Nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n          <ul className='nav-menu-items' onClick={showSidebar}>\n            <li className='navbar-toggle'>\n              <Link to='#' className='menu-bars'>\n                <AiIcons.AiOutlineClose size={20} />\n              </Link>\n            </li>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </Nav>\n      </IconContext.Provider>\n        \n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/Header/index.js",["167","168","169","170","171","172"],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/rotas.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Indicator/index.js",["173"],"import React, { useEffect } from 'react'\nimport { Container, Jumbotron, Card, Col, Row, Button } from 'react-bootstrap';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Logo from '../../assets/logo.svg'\nimport { Link } from 'react-router-dom';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { useSelector } from 'react-redux'//necessario para usar o useSelector do redux\nimport './styles.css';\n\n\nexport default function Indicator() {\n    const selectedDevice = useSelector((state) => state.devicesState.selectedDevice);//chama um dispositivo especifico do Redux\n    const devices = useSelector((state) => state.devicesState.devices)\n    const dadosDevice = useSelector((state) => state.devicesState.dadosDevice);\n\n    useEffect(() => {\n        console.log(dadosDevice.filter((device) => device.device === selectedDevice)[0] ?\n            dadosDevice.filter((device) => device.device === selectedDevice)[0].type : \"UNDEFINED\");\n    }, [selectedDevice])//fica observando caso tenha alguma alteração\n\n\n\n    return (\n        <Container fluid>\n            <Link to=\"/\" >\n                <Button variant=\"light\" style={{ marginBottom: '2%' }}><IoMdArrowRoundBack size={30} /></Button>\n            </Link>\n\n            <Jumbotron>\n\n                <h1 className=\"titleInfo\">Informações</h1>\n                <Row>\n\n                    <Col lg=\"3\">\n\n                        <Card style={{ marginTop: '6%' }}>\n                            <Card.Body>\n                                <Card.Img src={Logo} />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n\n                        {\n\n                            selectedDevice === \"\" ? (\n                                dadosDevice.length > 0 ? (\n                                    dadosDevice[0].type ?\n                                        dadosDevice[0].type === \"temp\" ?\n                                            <ListGroup>\n                                                <ListGroup.Item>Dispositivo: {selectedDevice === '' ? (devices.length > 0 ? devices[0].device : \"\") : devices.filter((device) => device.device === selectedDevice)[0].device} </ListGroup.Item>\n                                                <ListGroup.Item>Data do ultimo envio: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].ts : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].ts} </ListGroup.Item>\n                                                <ListGroup.Item>Bateria: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria} </ListGroup.Item>\n                                            </ListGroup>\n                                            :\n                                            <ListGroup>\n                                                <ListGroup.Item>Dispositivo: {selectedDevice === '' ? (devices.length > 0 ? devices[0].device : \"\") : devices.filter((device) => device.device === selectedDevice)[0].device} </ListGroup.Item>\n                                                <ListGroup.Item>Data do ultimo envio: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].ts : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].ts} </ListGroup.Item>\n                                                <ListGroup.Item>Latitude: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].lat : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].lat} </ListGroup.Item>\n                                                <ListGroup.Item>Longitude: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].long : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].long}</ListGroup.Item>\n                                                <ListGroup.Item>Bateria: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria} </ListGroup.Item>\n                                            </ListGroup>\n                                        : \"\"\n                                )\n                                    : \"\"\n                            ) : (\n                                dadosDevice.filter((device) => device.device === selectedDevice)[0] ?\n                                    dadosDevice.filter((device) => device.device === selectedDevice)[0].type === \"temp\" ?\n                                        <ListGroup>\n                                            <ListGroup.Item>Dispositivo: {selectedDevice === '' ? (devices.length > 0 ? devices[0].device : \"\") : devices.filter((device) => device.device === selectedDevice)[0].device} </ListGroup.Item>\n                                            <ListGroup.Item>Data do ultimo envio: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].ts : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].ts} </ListGroup.Item>\n                                            <ListGroup.Item>Bateria: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria} </ListGroup.Item>\n                                        </ListGroup>\n                                        :\n                                        <ListGroup>\n                                            <ListGroup.Item>Dispositivo: {selectedDevice === '' ? (devices.length > 0 ? devices[0].device : \"\") : devices.filter((device) => device.device === selectedDevice)[0].device} </ListGroup.Item>\n                                            <ListGroup.Item>Data do ultimo envio: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].ts : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].ts} </ListGroup.Item>\n                                            <ListGroup.Item>Latitude: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].lat : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].lat} </ListGroup.Item>\n                                            <ListGroup.Item>Longitude: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].long : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].long}</ListGroup.Item>\n                                            <ListGroup.Item>Bateria: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria} </ListGroup.Item>\n                                        </ListGroup>\n                                    :\n                                    \"\"\n                            )\n\n                        }\n\n                        <Link to=\"/tabela\">\n                            <Button variant=\"warning\" style={{ marginTop: '2%' }}>Historico</Button>\n                        </Link>\n                    </Col>\n                </Row>\n\n\n            </Jumbotron>\n        </Container>\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Graph/index.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Home/index.js",["174","175","176","177","178","179","180","181","182","183","184","185"],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Table/index.js",["186","187"],"import React, { useEffect } from 'react';\nimport { Container, Table, Button, Col, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { useSelector } from 'react-redux';\n\n\nfunction getDate(timeSecs){\n    const dateObject = new Date(timeSecs * 1000)\n    const humanDateFormat = dateObject.toLocaleString() //20/04/2021 10:30:15\n\n    return humanDateFormat\n}\n\nexport default function Tabela() {\n    const selectedDevice = useSelector((state) => state.devicesState.selectedDevice);\n    const devices = useSelector((state) => state.devicesState.devices);\n    const dadosDevice = useSelector((state) =>  state.devicesState.dadosDevice);\n\n    useEffect(() => {}, [selectedDevice, dadosDevice])\n\n    const propriedadesDevice = Object.keys(dadosDevice[0])\n    /*alert( JSON.stringify( propriedadesDevice ))*/\n\n    return (\n        <Container fluid>\n            <Link to=\"/indicator\">\n                <Button variant=\"light\"><IoMdArrowRoundBack size={30} /></Button>\n            </Link>\n     \n            <Row lg={true} style={{ marginTop: '2%' }}>\n\n                <Col lg=\"12\">\n                    <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                                {/*<th>{selectedDevice === '' ? (devices.length > 0 ? devices[0].device : \"\") : devices.filter((dev) => dev.device === selectedDevice)[0].device}</th> */}\n                                <th>Device</th>\n                                <th>Type</th>\n                                <th>Latitude</th>\n                                <th>Longitude</th>\n                                <th>Bateria</th>\n                                <th>Data</th>\n                            </tr>\n                        </thead>\n                        {\n                            dadosDevice.map((dev) => (\n                                <tbody>\n                                    <tr>\n                                       \n                                        {/* <td>{dev.device}</td> */}\n                                        <td>{dev.device}</td>\n                                        <td>{dev.type}</td>\n                                        <td>{parseFloat(dev.lat).toFixed(3)}</td>\n                                        <td>{parseFloat(dev.long).toFixed(3)}</td>\n                                        <td>{parseFloat(dev.bateria).toFixed(2)}V</td>\n                                        <td>{getDate(dev.ts)}</td>\n                                    </tr>\n                                </tbody>\n                            ))\n                        }\n                    </Table>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Map/index.js",["188","189","190","191","192","193","194"],"import React, { useState, useEffect } from 'react';\nimport { Form, Col, Row, Button, FormCheck } from 'react-bootstrap';\nimport { FiSearch } from 'react-icons/fi';\nimport './styles.css';\n\nexport default function Mapa() {\n    const [days, setDays] = useState([]);\n    const [moth, setMoth] = useState([]);\n    const [yaear, setYear] = useState([]);\n    const [dayCheck, setDayCheck] = useState(false);\n\n    useEffect(() => {\n        daysWeek()\n        console.log(days)\n    }, [])\n\n    function daysWeek(day) {\n        for (var day = 0; day < 30; day++) {\n            setDays(day)\n        }\n    }\n\n    return (\n        <div>\n            <Row>\n            {\n                dayCheck === false ? \n                    <Col lg=\"12\">\n                        <Form.Group as={Row} style={{ display: 'flex', alignItems: 'center', marginLeft: '17px' }}>\n                            <Form.Control style={{ width: 200 }} as=\"select\">\n                                <option>semanas</option>\n                                <option>2</option>\n                                <option>3</option>\n                            </Form.Control>\n                            <FormCheck  value={dayCheck} onChange={(e) => setDayCheck(e.target.checked)} label=\"Dia específico\" style={{ marginLeft: '2%' }} />\n                        </Form.Group>\n                    </Col>\n                 :\n                    \n    \n                        <Col style={{ flexDirection: 'row', display: 'flex', marginBottom: '2%', marginLeft:'17px' }}>\n                            <Form.Control style={{ width: 200 }} as=\"select\">\n                                <option>dia</option>\n                                <option>2</option>\n                                <option>3</option>\n                            </Form.Control>\n\n                            <Form.Control style={{ width: 200, marginLeft: '2%' }} as=\"select\">\n                                <option>mês</option>\n                                <option>2</option>\n                                <option>3</option>\n                            </Form.Control>\n                            <Form.Control style={{ width: 200, marginLeft: '2%' }} as=\"select\">\n                                <option>ano</option>\n                                <option>2</option>\n                                <option>3</option>\n                            </Form.Control>\n                            <Button style={{ marginLeft: 30, alignItems: 'center', display: 'flex', }} variant=\"success\"><FiSearch size={20} />Buscar</Button>\n                            <FormCheck defaultChecked  value={dayCheck} onChange={(e) => setDayCheck(e.target.checked)} label=\"Dia específico\" style={{ marginLeft: '2%', top:8, display:\"flex\", flexDirection:'row' }} />\n                        </Col>\n                    \n            }\n            </Row>\n            <div className=\"mapStyle\">\n                <iframe src={`http://161.97.133.47:5000/day`} width=\"1150\" height=\"450\" frameBorder=\"0\" />\n            </div>\n        </div>\n\n    )\n\n}\n","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Connections/api.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/index.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/rootReducer.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/Devices/reducer.js",["195"],"import { ATUALIZAR_DEVICES, SELECT_DEVICE, CADASTRO_EVERY, DADOS_DEVICE, dadosDevice } from './actions';\n\nconst initialState = {\n    devices: [],\n    selectedDevice: '',\n    cadastroEvery: [],\n    dadosDevice: []\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case ATUALIZAR_DEVICES:\n            return {\n                ...state,\n                devices: payload\n            }\n        case SELECT_DEVICE:\n            return {\n                ...state,\n                selectedDevice: payload\n            }\n        case CADASTRO_EVERY:\n            return {\n                ...state,\n                cadastroEvery: payload\n            }\n        case DADOS_DEVICE:\n            return {\n                ...state,\n                dadosDevice: payload,\n                selectedDevice: payload[0].device\n            }\n        default:\n            return state\n    }\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/Devices/actions.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/CadastroEvery/index.js",["196","197","198","199","200","201","202","203","204","205","206","207"],"import React, { useState } from 'react';\nimport './styles.css';\nimport {\n    Accordion,\n    Form,\n    Col,\n    Button,\n    Row,\n    Container,\n    Card,\n    Badge,\n    InputGroup,\n    FormControl,\n    Dropdown\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { BsFillTrashFill, BsPencil } from 'react-icons/bs'\nimport { FaPlusCircle } from 'react-icons/fa'\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward, IoMdAdd } from 'react-icons/io';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { cadastroEvery, dadosDevice } from '../../store/Modulos/Devices/actions';\n\n\n\n\nexport default function CadastroEvery() {\n    const [dispositivoEUI, setDispositivoEUI] = useState('');\n    const [aplicacaoEUI, setAplicacaoEUI] = useState('');\n    //const [tags, setTags] = useState([]);\n    const [netWorkSessionKey, setNetWorkSessionKey] = useState('');\n    const [applicationSessionKey, setApplicationiSessionKey] = useState('');\n    const [checkActivation, setCheckActivation] = useState(false);\n    const [selectType, setSelectType] = useState('');\n    const dispatch = useDispatch()\n\n    const cadastroEveryNet = useSelector((state) => state.devicesState.cadastroEvery);\n    const selectedDevice = useSelector((state) => state.devicesState.selectedDevice);\n    const dadosDevice = useSelector((state) => state.devicesState.dadosDevice);\n    const devices = useSelector((state) => state.devicesState.devices);\n\n\n    console.log(cadastroEveryNet)\n    function CadastroEvery() {\n        const data = {\n            dispositivoEUI: dispositivoEUI,\n            aplicacaoEUI: aplicacaoEUI,\n            //tags: tags,\n            netWorkSessionKey: netWorkSessionKey,\n            applicationSessionKey: applicationSessionKey,\n            activation: checkActivation\n        }\n\n        dispatch(cadastroEvery(data))\n\n    }\n\n    console.log(selectType)\n\n\n\n\n    return (\n        <Container style={{ margin: '20px 0px', marginBottom: '20%' }} fluid>\n            <div>\n                <Link to=\"/\">\n                    <Button variant=\"light\" style={{ marginBottom: '2%' }}><IoMdArrowRoundBack size={30} /></Button>\n                </Link>\n            </div>\n\n            <Row>\n                <Col lg=\"6\" >\n\n\n\n                    <h4>Cadastro dispositivo</h4>\n                    {\n                        checkActivation === false\n                            ?\n                            <Form>\n                                <Form.Control value={dispositivoEUI} onChange={(e) => setDispositivoEUI(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Disposito EUI\" />\n                                <Form.Control value={aplicacaoEUI} onChange={(e) => setAplicacaoEUI(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Aplicação EUI\" />\n                                <Form.Check value={checkActivation} onChange={(e) => setCheckActivation(e.target.checked)} type=\"switch\" id=\"custom-switch\" label={checkActivation === true ? \"OTAA\" : \"Activation ABP\"}  style={{ marginBottom: '2%' }} />\n                            </Form>\n                            :\n\n                            <Form>\n                                <Form.Control value={dispositivoEUI} onChange={(e) => setDispositivoEUI(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Disposito EUI\" />\n                                <Form.Control value={aplicacaoEUI} onChange={(e) => setAplicacaoEUI(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Aplicação EUI\" />\n                                <Form.Check value={checkActivation} onChange={(e) => setCheckActivation(e.target.checked)} type=\"switch\" id=\"custom-switch\" label={checkActivation === true ? \"Activation OTAA\" : \"Activation ABP\"} style={{ marginBottom: '2%' }} />\n                                <Form.Control value={netWorkSessionKey} onChange={(e) => setNetWorkSessionKey(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Network session key\" />\n                                <Form.Control value={applicationSessionKey} onChange={(e) => setApplicationiSessionKey(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Application session key\" />\n                            </Form>\n                    }\n\n\n                    {/* <Form.Control\n                            className=\"TagForm\"\n                            type=\"text\"\n                            placeholder=\"Tags\"\n                            onKeyPress={event => {\n                                if (event.key === \"Enter\") {\n                                    setTags([...tags, event.target.value])\n                                    event.target.value = \"\";\n                                }\n                            }}\n                        /> */}\n\n                    {/* <ul className=\"TagList\">\n                            {tags.map((tag, index) => (\n                                <li key={index} className=\"Tag\">\n                                    {tag}\n                                    <BsFillTrashFill\n                                        size={20}\n                                        onClick={() => { setTags([...tags.filter(device => device !== tag)]) }}\n                                    />\n                                </li>\n                            ))}\n                        </ul> */}\n                    <Form.Label>Tipo do Dispositivo (Utilizado para definir tipos de dados a receber):</Form.Label>\n                    <Dropdown>\n                        <Dropdown.Toggle\n                            id=\"dropdown-custom-components\"\n                            style={{\n                                width: '50%',\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                justifyContent: 'space-between',\n                                marginBottom:'2%'\n\n                            }}>\n                            {selectedDevice === '' ? (devices.length > 0 ? devices[0].type : \"\") : devices.filter((dev) => dev.device === selectedDevice)[0].type}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu style={{ width: '50%', marginBottom: '-38%' }}>\n                            {\n                                devices.map((item) =>(\n                                    <Dropdown.Item  eventKey={event => {\n                                        if (event.key === \"Click\") {\n                                            setSelectType([...selectType, event.target.value])\n                                            event.target.value = \"\";\n                                        }\n                                    }}>{item.type}</Dropdown.Item>\n                                ))   \n                            }\n                            <Link to=\"/cadastro/cadastrar-variaveis\" className=\"nextCad\">\n                                <Button onClick={CadastroEvery} variant=\"success\"><IoMdAdd size={30} /> Cadastrar Novo Tipo</Button>\n                            </Link>\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                            <Button  onClick={() =>{}} variant=\"success\">Cadastrar Dispositivo</Button>\n                </Col>\n\n\n            </Row>\n        </Container>\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/CadastroVariaveis/index.js",["208","209","210","211"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Jumbotron, Form, Modal, Badge, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { MdRemoveCircleOutline } from 'react-icons/md';\nimport { VscSymbolOperator } from 'react-icons/vsc';\nimport {useSelector} from 'react-redux';\n\nimport './styles.css';\n\nexport default function CadastroVariaveis() {\n\n    const [form, setForm] = useState({ cards: [] });\n    const [cadastro, setCadastro] = useState();\n    const [operations, setOperations] = useState([\n        {\n            id: 0, name: 'Operação', value: null\n        },\n        {\n            id: 1, name: \"Soma\", value: \"sum\"\n        },\n        {\n            id: 2, name: \"Divisão\", value: \"div\"\n        },\n        {\n            id: 3, name: \"Multiplicação\", value: \"mux\"\n        },\n        {\n            id: 4, name: \"Máscara\", value: \"mask\"\n        },\n    ]);\n    const [ordemByte, setOrdemBytes] = useState([{ id: 0, name: '', value: '' }, { id: 1, name: 'Little-endian (trás p/ frente)', value: 'little' }, { id: 2, name: 'Big-endian (frente p/ trás)', value: 'big' },])\n    const [saveOrdemByte, setSaveOrdemByte] = useState(1);\n    const [tamanhoByte, setTamanhoByte] = useState('');\n    const [nome, setNome] = useState('');\n    const cadastroEvery = useSelector((state) => state.devicesState.cadastroEvery);\n    \n\n\n    const addNewCamp = () => {\n        let newForm = { ...form }\n        let newCard = {\n            variavel: \"\",\n            bitInicial: \"\",\n            bitFinal: \"\",\n            args: \"\",\n            operationsSelects: []\n        }\n        newForm.cards.push(newCard);\n        setForm(newForm)\n    }\n\n    const addNewOperation = (index) => {\n        let newForm = { ...form }\n        let newOperationSelect = {\n            operacao: []\n        }\n        newForm.cards[index].operationsSelects.push(newOperationSelect);\n        setForm(newForm)\n    }\n\n    const onFormUpdate = (e, index) => {\n        let newForm = { ...form }\n        newForm.cards[index][e.target.name] = e.target.value;\n        setForm(newForm)\n    }\n\n    function onOperationSelectUpdate(e, cardIndex, selectIndex) {\n        let newForm = { ...form };\n        newForm.cards[cardIndex].operationsSelects[selectIndex].operacao = e.target.value;\n        setForm(newForm);\n    }\n\n    function onOrdemByte(e) {\n        setOrdemBytes(e.target.value)\n    }\n\n    function operationRemove(cardIndex, selectIndex) {\n        let newForm = { ...form };\n        newForm.cards[cardIndex].operationsSelects.splice(selectIndex, 1);\n        setForm(newForm);\n    }\n\n\n\n    const removeOperacao = (cardIndex, selectIndex) => {\n        //setForm([...newCard.filter((_, index) => index !== position)])\n        let newForm = { ...form };\n        newForm.cards.splice(cardIndex, 1)\n        setForm(newForm);\n\n    }\n\n\n\n    function handleCadastro() {\n        console.log(cadastro)\n\n        const params = {\n            card: form,\n            ordemByte: saveOrdemByte,\n            tamanhoByte: tamanhoByte,\n            nome: nome,\n            every: cadastroEvery\n        }\n        setCadastro(params)\n\n\n\n    }\n\n\n\n\n\n    return (\n        <Container fluid>\n            <Link to=\"/cadastro\">\n                <Button variant=\"light\" style={{ marginBottom: '2%' }}><IoMdArrowRoundBack size={30} /></Button>\n            </Link>\n            <Row lg=\"12\">\n\n                <Col>\n                    <h3 style={{ textAlign: 'center' }}>Dados do Dispositivo</h3>\n                    <Form onSubmit={handleCadastro}>\n                        <Jumbotron>\n                            <Form.Row>\n                                <Col lg=\"3\">\n                                    <Form.Label>Nome do Tipo</Form.Label>\n                                    <Form.Control value={nome} onChange={(e) => setNome(e.target.value)} style={{ marginBottom: '10px' }} maxLength={10} />\n                                </Col>\n                                <Col lg=\"1\">\n                                    <Form.Label>Tamanho em Bytes</Form.Label>\n                                    <Form.Control value={tamanhoByte} onChange={(e) => setTamanhoByte(e.target.value)} style={{ marginBottom: '10px' }} maxLength={10} />\n                                </Col>\n                            </Form.Row>\n                            <Form.Row>\n                                <Col lg=\"2\">\n                                    <Form.Label>Ordem dos bits de dados</Form.Label>\n                                    <Form.Control value={saveOrdemByte} onChange={e => setSaveOrdemByte(e.target.value)} style={{ marginBottom: '10px' }} as=\"select\" custom>\n                                        {ordemByte.map((byte) => (\n                                            <option key={byte.id} value={byte.value}>{byte.name}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Col>\n                            </Form.Row>\n                            <Form.Label>Variáveis</Form.Label>\n\n                            {form.cards.length > 0 && form.cards.map((card, index) => (\n                                <Card body key={index} style={{ marginBottom: '3%', borderRadius: '5px' }}>\n                                    {`Campo ${index + 1}`}\n\n                                    <Form.Row>\n                                        <Row>\n                                            <Col lg=\"12\">\n                                                <Form.Control style={{ marginBottom: '1%', width: '40%', marginRight: '1%' }} name=\"variavel\" onChange={(e) => onFormUpdate(e, index)} placeholder={`Variavel ${index + 1}`} />\n                                                <Form.Control style={{ marginBottom: '1%', width: '30%', marginRight: '1%' }} name=\"bitInicial\" onChange={(e) => onFormUpdate(e, index)} placeholder={`BitInicial ${index + 1}`} />\n                                                <Form.Control style={{ marginBottom: '1%', width: '30%', marginRight: '1%' }} name=\"bitFinal\" onChange={(e) => onFormUpdate(e, index)} placeholder={`BitFinal ${index + 1}`} />\n\n                                                {form.cards[index].operationsSelects &&\n                                                    form.cards[index].operationsSelects.length > 0 &&\n                                                    form.cards[index].operationsSelects.map((operationSelect, i) => (\n\n\n                                                        <Form.Row key={i} >\n                                                            <Col>\n                                                                <Form.Control style={{ marginRight: '1%', width: '100%', marginBottom: '2%' }} value={form.cards[index].operationsSelects[i].operacao} onChange={(e) => onOperationSelectUpdate(e, index, i)} as=\"select\">\n                                                                    {operations.map((operation) => (\n                                                                        <option key={operation.id} value={operation.value}>{operation.name}</option>\n                                                                    ))}\n                                                                </Form.Control>\n                                                            </Col>\n\n\n                                                            <Col>\n                                                                <Form.Control placeholder=\"ARGS\" name=\"args\" onChange={(e) => onFormUpdate(e, index)} />\n                                                            </Col>\n                                                            <Col>\n                                                                <Badge style={{ justifyContent: 'center', alignItems: 'center', marginTop: 5 }} onClick={() => operationRemove(index, i)} variant=\"danger\"  ><MdRemoveCircleOutline size={20} /></Badge>\n                                                            </Col>\n\n                                                        </Form.Row>\n\n\n\n                                                    ))\n                                                }\n                                            </Col>\n                                            <Col>\n                                                <Button onClick={() => addNewOperation(index)} variant=\"success\"><VscSymbolOperator size={25} /></Button>\n                                                <Button style={{ marginLeft: '2%' }} onClick={() => removeOperacao(index)} variant=\"danger\"><MdRemoveCircleOutline size={25} /></Button>\n                                            </Col>\n                                        </Row>\n                                    </Form.Row>\n\n                                </Card>\n                            ))\n\n                            }\n\n                            <Form.Row>\n                                <Button style={{ marginBottom: '10px' }} variant=\"success\" onClick={() => addNewCamp()}>Adicionar variável</Button>\n                            </Form.Row>\n\n\n\n                        </Jumbotron>\n\n                        <Button onClick={handleCadastro} variant=\"success\">Adicionar tipo</Button>\n                        \n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SelectDeviceCombo/index.js",["212","213","214"],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SideBar/SidebarData.js",["215","216"],"import React from 'react';\nimport * as BiDevices from 'react-icons/bi';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\nimport * as RiAddFill from 'react-icons/ri';\nimport * as BiMapPin from 'react-icons/bi';\nimport * as FiLogOut from 'react-icons/fi';\n\n\nexport const SidebarData = [\n  {\n    title: 'Home',\n    path: '/',\n    icon: <AiIcons.AiFillHome />,\n    cName: 'nav-text',\n    \n  },\n  {\n    title: 'Cadastrar Dispositivo',\n    path: '/cadastro',\n    icon: <RiAddFill.RiAddFill/>,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Informações',\n    path: '/indicator',\n    icon: <BiDevices.BiDevices />,\n    cName: 'nav-text'\n  },\n  {\n      title:'Sair',\n      path:'/sair',\n      icon:<FiLogOut.FiLogOut/>,\n      cName:'nav-text'\n  }\n    \n];",{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":12},{"ruleId":"221","severity":1,"message":"225","line":7,"column":8,"nodeType":"223","messageId":"224","endLine":7,"endColumn":12},{"ruleId":"221","severity":1,"message":"226","line":1,"column":16,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"221","severity":1,"message":"227","line":2,"column":23,"nodeType":"223","messageId":"224","endLine":2,"endColumn":32},{"ruleId":"221","severity":1,"message":"228","line":2,"column":34,"nodeType":"223","messageId":"224","endLine":2,"endColumn":37},{"ruleId":"221","severity":1,"message":"229","line":2,"column":39,"nodeType":"223","messageId":"224","endLine":2,"endColumn":42},{"ruleId":"230","severity":1,"message":"231","line":14,"column":21,"nodeType":"232","endLine":14,"endColumn":64},{"ruleId":"221","severity":1,"message":"228","line":2,"column":17,"nodeType":"223","messageId":"224","endLine":2,"endColumn":20},{"ruleId":"221","severity":1,"message":"229","line":2,"column":22,"nodeType":"223","messageId":"224","endLine":2,"endColumn":25},{"ruleId":"221","severity":1,"message":"233","line":4,"column":10,"nodeType":"223","messageId":"224","endLine":4,"endColumn":25},{"ruleId":"221","severity":1,"message":"234","line":4,"column":27,"nodeType":"223","messageId":"224","endLine":4,"endColumn":36},{"ruleId":"221","severity":1,"message":"235","line":12,"column":24,"nodeType":"223","messageId":"224","endLine":12,"endColumn":37},{"ruleId":"217","replacedBy":"236"},{"ruleId":"219","replacedBy":"237"},{"ruleId":"221","severity":1,"message":"238","line":3,"column":13,"nodeType":"223","messageId":"224","endLine":3,"endColumn":20},{"ruleId":"221","severity":1,"message":"226","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"239","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":36},{"ruleId":"221","severity":1,"message":"240","line":8,"column":10,"nodeType":"223","messageId":"224","endLine":8,"endColumn":18},{"ruleId":"221","severity":1,"message":"241","line":8,"column":20,"nodeType":"223","messageId":"224","endLine":8,"endColumn":24},{"ruleId":"221","severity":1,"message":"242","line":8,"column":26,"nodeType":"223","messageId":"224","endLine":8,"endColumn":32},{"ruleId":"230","severity":1,"message":"231","line":25,"column":21,"nodeType":"232","endLine":25,"endColumn":85},{"ruleId":"243","severity":1,"message":"244","line":19,"column":8,"nodeType":"245","endLine":19,"endColumn":24,"suggestions":"246"},{"ruleId":"221","severity":1,"message":"226","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"247","line":2,"column":47,"nodeType":"223","messageId":"224","endLine":2,"endColumn":56},{"ruleId":"221","severity":1,"message":"241","line":2,"column":58,"nodeType":"223","messageId":"224","endLine":2,"endColumn":62},{"ruleId":"221","severity":1,"message":"248","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":14},{"ruleId":"221","severity":1,"message":"233","line":4,"column":10,"nodeType":"223","messageId":"224","endLine":4,"endColumn":25},{"ruleId":"221","severity":1,"message":"234","line":4,"column":27,"nodeType":"223","messageId":"224","endLine":4,"endColumn":36},{"ruleId":"221","severity":1,"message":"249","line":5,"column":10,"nodeType":"223","messageId":"224","endLine":5,"endColumn":29},{"ruleId":"221","severity":1,"message":"250","line":6,"column":10,"nodeType":"223","messageId":"224","endLine":6,"endColumn":25},{"ruleId":"221","severity":1,"message":"251","line":7,"column":10,"nodeType":"223","messageId":"224","endLine":7,"endColumn":19},{"ruleId":"221","severity":1,"message":"252","line":11,"column":8,"nodeType":"223","messageId":"224","endLine":11,"endColumn":13},{"ruleId":"221","severity":1,"message":"253","line":20,"column":11,"nodeType":"223","messageId":"224","endLine":20,"endColumn":18},{"ruleId":"221","severity":1,"message":"254","line":22,"column":11,"nodeType":"223","messageId":"224","endLine":22,"endColumn":19},{"ruleId":"221","severity":1,"message":"253","line":17,"column":11,"nodeType":"223","messageId":"224","endLine":17,"endColumn":18},{"ruleId":"221","severity":1,"message":"255","line":22,"column":11,"nodeType":"223","messageId":"224","endLine":22,"endColumn":29},{"ruleId":"221","severity":1,"message":"256","line":8,"column":12,"nodeType":"223","messageId":"224","endLine":8,"endColumn":16},{"ruleId":"221","severity":1,"message":"257","line":8,"column":18,"nodeType":"223","messageId":"224","endLine":8,"endColumn":25},{"ruleId":"221","severity":1,"message":"258","line":9,"column":12,"nodeType":"223","messageId":"224","endLine":9,"endColumn":17},{"ruleId":"221","severity":1,"message":"259","line":9,"column":19,"nodeType":"223","messageId":"224","endLine":9,"endColumn":26},{"ruleId":"243","severity":1,"message":"260","line":15,"column":8,"nodeType":"245","endLine":15,"endColumn":10,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":18,"column":18,"nodeType":"223","messageId":"264","endLine":18,"endColumn":21},{"ruleId":"265","severity":1,"message":"266","line":65,"column":17,"nodeType":"232","endLine":65,"endColumn":107},{"ruleId":"267","severity":1,"message":"268","line":10,"column":1,"nodeType":"269","endLine":36,"endColumn":2},{"ruleId":"221","severity":1,"message":"270","line":4,"column":5,"nodeType":"223","messageId":"224","endLine":4,"endColumn":14},{"ruleId":"221","severity":1,"message":"271","line":10,"column":5,"nodeType":"223","messageId":"224","endLine":10,"endColumn":9},{"ruleId":"221","severity":1,"message":"272","line":11,"column":5,"nodeType":"223","messageId":"224","endLine":11,"endColumn":10},{"ruleId":"221","severity":1,"message":"273","line":12,"column":5,"nodeType":"223","messageId":"224","endLine":12,"endColumn":15},{"ruleId":"221","severity":1,"message":"274","line":13,"column":5,"nodeType":"223","messageId":"224","endLine":13,"endColumn":16},{"ruleId":"221","severity":1,"message":"275","line":17,"column":10,"nodeType":"223","messageId":"224","endLine":17,"endColumn":25},{"ruleId":"221","severity":1,"message":"276","line":17,"column":27,"nodeType":"223","messageId":"224","endLine":17,"endColumn":35},{"ruleId":"221","severity":1,"message":"277","line":18,"column":10,"nodeType":"223","messageId":"224","endLine":18,"endColumn":22},{"ruleId":"221","severity":1,"message":"278","line":19,"column":30,"nodeType":"223","messageId":"224","endLine":19,"endColumn":51},{"ruleId":"221","severity":1,"message":"279","line":21,"column":25,"nodeType":"223","messageId":"224","endLine":21,"endColumn":36},{"ruleId":"221","severity":1,"message":"280","line":38,"column":11,"nodeType":"223","messageId":"224","endLine":38,"endColumn":22},{"ruleId":"281","severity":1,"message":"282","line":128,"column":33,"nodeType":"283","messageId":"284","endLine":128,"endColumn":47},{"ruleId":"221","severity":1,"message":"239","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":36},{"ruleId":"221","severity":1,"message":"285","line":2,"column":56,"nodeType":"223","messageId":"224","endLine":2,"endColumn":61},{"ruleId":"221","severity":1,"message":"286","line":15,"column":24,"nodeType":"223","messageId":"224","endLine":15,"endColumn":37},{"ruleId":"221","severity":1,"message":"287","line":74,"column":14,"nodeType":"223","messageId":"224","endLine":74,"endColumn":25},{"ruleId":"221","severity":1,"message":"226","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"288","line":9,"column":10,"nodeType":"223","messageId":"224","endLine":9,"endColumn":32},{"ruleId":"243","severity":1,"message":"289","line":28,"column":8,"nodeType":"245","endLine":28,"endColumn":24,"suggestions":"290"},{"ruleId":"221","severity":1,"message":"291","line":4,"column":13,"nodeType":"223","messageId":"224","endLine":4,"endColumn":20},{"ruleId":"221","severity":1,"message":"292","line":6,"column":13,"nodeType":"223","messageId":"224","endLine":6,"endColumn":21},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"no-unused-vars","'Side' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BsClipboardData' is defined but never used.","'BsGraphUp' is defined but never used.","'setNavigation' is assigned a value but never used.",["293"],["294"],"'FaIcons' is defined but never used.","'useEffect' is defined but never used.","'Dropdown' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dadosDevice'. Either include it or remove the dependency array.","ArrayExpression",["295"],"'Jumbotron' is defined but never used.","'Link' is defined but never used.","'AiOutlineInfoCircle' is defined but never used.","'SiOpenstreetmap' is defined but never used.","'RiAddFill' is defined but never used.","'Combo' is defined but never used.","'devices' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'propriedadesDevice' is assigned a value but never used.","'moth' is assigned a value but never used.","'setMoth' is assigned a value but never used.","'yaear' is assigned a value but never used.","'setYear' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'days'. Either include it or remove the dependency array.",["296"],"no-redeclare","'day' is already defined.","redeclared","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Accordion' is defined but never used.","'Card' is defined but never used.","'Badge' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'BsFillTrashFill' is defined but never used.","'BsPencil' is defined but never used.","'FaPlusCircle' is defined but never used.","'IoMdArrowRoundForward' is defined but never used.","'dadosDevice' is defined but never used.","'dadosDevice' is assigned a value but never used.","no-dupe-keys","Duplicate key 'justifyContent'.","ObjectExpression","unexpected","'Modal' is defined but never used.","'setOperations' is assigned a value but never used.","'onOrdemByte' is defined but never used.","'MdPhotoSizeSelectLarge' is defined but never used.","React Hook useEffect has missing dependencies: 'handleDevices' and 'selectData'. Either include them or remove the dependency array.",["297"],"'IoIcons' is defined but never used.","'BiMapPin' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},"Update the dependencies array to be: [dadosDevice, selectedDevice]",{"range":"304","text":"305"},"Update the dependencies array to be: [days]",{"range":"306","text":"307"},"Update the dependencies array to be: [handleDevices, selectData, selectedDevice]",{"range":"308","text":"309"},[956,972],"[dadosDevice, selectedDevice]",[476,478],"[days]",[1050,1066],"[handleDevices, selectData, selectedDevice]"]