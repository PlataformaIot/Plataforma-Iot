[{"/Users/arleysouto/Documents/Aplicacao/src/index.js":"1","/Users/arleysouto/Documents/Aplicacao/src/reportWebVitals.js":"2","/Users/arleysouto/Documents/Aplicacao/src/App.js":"3","/Users/arleysouto/Documents/Aplicacao/src/components/rotas.js":"4","/Users/arleysouto/Documents/Aplicacao/src/components/SideBar/index.js":"5","/Users/arleysouto/Documents/Aplicacao/src/components/Header/index.js":"6","/Users/arleysouto/Documents/Aplicacao/src/components/Menu/index.js":"7","/Users/arleysouto/Documents/Aplicacao/src/components/SideBar/SidebarData.js":"8","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Map/index.js":"9","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Graph/index.js":"10","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Table/index.js":"11","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Indicator/index.js":"12","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Home/index.js":"13","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/index.js":"14","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/reportWebVitals.js":"15","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/App.js":"16","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SideBar/index.js":"17","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/Header/index.js":"18","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/rotas.js":"19","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Indicator/index.js":"20","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Graph/index.js":"21","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Home/index.js":"22","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Table/index.js":"23","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Map/index.js":"24","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Connections/api.js":"25","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/index.js":"26","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/rootReducer.js":"27","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/Devices/reducer.js":"28","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/Devices/actions.js":"29","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/CadastroEvery/index.js":"30","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/CadastroVariaveis/index.js":"31","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SelectDeviceCombo/index.js":"32","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SideBar/SidebarData.js":"33","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/functions.js":"34"},{"size":548,"mtime":1611852530590,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1611676684393,"results":"37","hashOfConfig":"36"},{"size":392,"mtime":1612475667941,"results":"38","hashOfConfig":"36"},{"size":687,"mtime":1612204599457,"results":"39","hashOfConfig":"36"},{"size":1436,"mtime":1612290503258,"results":"40","hashOfConfig":"36"},{"size":698,"mtime":1612370886680,"results":"41","hashOfConfig":"36"},{"size":1237,"mtime":1612370822724,"results":"42","hashOfConfig":"36"},{"size":982,"mtime":1612206528389,"results":"43","hashOfConfig":"36"},{"size":130,"mtime":1612473930022,"results":"44","hashOfConfig":"36"},{"size":1223,"mtime":1612382188051,"results":"45","hashOfConfig":"36"},{"size":995,"mtime":1611864341329,"results":"46","hashOfConfig":"36"},{"size":1242,"mtime":1612461949130,"results":"47","hashOfConfig":"36"},{"size":3796,"mtime":1612461391099,"results":"48","hashOfConfig":"36"},{"size":548,"mtime":1619136117634,"results":"49","hashOfConfig":"50"},{"size":362,"mtime":1619136117634,"results":"51","hashOfConfig":"50"},{"size":595,"mtime":1619136117595,"results":"52","hashOfConfig":"50"},{"size":1435,"mtime":1618721714000,"results":"53","hashOfConfig":"50"},{"size":1077,"mtime":1619136117623,"results":"54","hashOfConfig":"50"},{"size":777,"mtime":1619189353401,"results":"55","hashOfConfig":"50"},{"size":7407,"mtime":1619136117612,"results":"56","hashOfConfig":"50"},{"size":4576,"mtime":1619136117607,"results":"57","hashOfConfig":"50"},{"size":13207,"mtime":1619136117608,"results":"58","hashOfConfig":"50"},{"size":2888,"mtime":1619136117617,"results":"59","hashOfConfig":"50"},{"size":1826,"mtime":1619189272372,"results":"60","hashOfConfig":"50"},{"size":158,"mtime":1619136117597,"results":"61","hashOfConfig":"50"},{"size":148,"mtime":1619136117645,"results":"62","hashOfConfig":"50"},{"size":142,"mtime":1619136117641,"results":"63","hashOfConfig":"50"},{"size":907,"mtime":1619136117639,"results":"64","hashOfConfig":"50"},{"size":565,"mtime":1619136117638,"results":"65","hashOfConfig":"50"},{"size":7455,"mtime":1619136117602,"results":"66","hashOfConfig":"50"},{"size":9530,"mtime":1619136117604,"results":"67","hashOfConfig":"50"},{"size":4788,"mtime":1619136117627,"results":"68","hashOfConfig":"50"},{"size":780,"mtime":1618935300856,"results":"69","hashOfConfig":"50"},{"size":948,"mtime":1619136117642,"results":"70","hashOfConfig":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"itf7b",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"1oiixdr",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"105"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"105"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"105"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"105"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"113"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"105"},"/Users/arleysouto/Documents/Aplicacao/src/index.js",[],["158","159"],"/Users/arleysouto/Documents/Aplicacao/src/reportWebVitals.js",[],"/Users/arleysouto/Documents/Aplicacao/src/App.js",["160","161"],"import { BrowserRouter } from 'react-router-dom';\nimport React from 'react'\n\nimport Routers from '../src/components/rotas';\nimport Header from '../src/components/Header';\nimport Side from '../src/components/SideBar';\nimport Menu from '../src/components/Menu'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routers />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/arleysouto/Documents/Aplicacao/src/components/rotas.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/SideBar/index.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/Header/index.js",["162"],"import React, {useState} from 'react';\nimport './styles.css';\nimport {Dropdown} from 'react-bootstrap';\nimport './styles.css';\nimport Menu from '../Menu'\n\nexport default function Header(){  \n    return(\n        <header className=\"container\">\n            <Menu/>\n        \n            <Dropdown>\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">Devices</Dropdown.Toggle>\n                <Dropdown.Menu>\n                    <Dropdown.Item>Device 1</Dropdown.Item>\n                    <Dropdown.Item>Device 2</Dropdown.Item>\n                    <Dropdown.Item>Device 3</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n            \n        </header>\n    )\n}","/Users/arleysouto/Documents/Aplicacao/src/components/Menu/index.js",["163","164","165","166"],"import React from 'react';\nimport { Navbar, Nav, Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\nimport Logo from '../assets/logo.svg'\nimport './styles.css'\n\nexport default function Menu() {\n    return (\n\n            <Navbar collapseOnSelect expand='lg'>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Link to=\"/\">\n                    <img src={Logo} width=\"100\" height=\"100\" />\n                </Link>\n                    <Nav className=\"mr-auto\">\n                        <Link className=\"link\" to=\"/\" style={{ textDecoration: 'none' }}>Home</Link>\n                        <Link className=\"link\" to=\"/tabela\" style={{ textDecoration: 'none' }}>Informações</Link>\n                        <Link className=\"link\" to=\"/graph\" style={{ textDecoration: 'none' }}>Gráfico</Link>\n                        <Link className=\"link\" to=\"/indicator\" style={{ textDecoration: 'none' }}>Indicador</Link>\n                        <Link className=\"link\" to=\"/map\" style={{ textDecoration: 'none' }}>Mapa</Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n\n        \n    )\n}","/Users/arleysouto/Documents/Aplicacao/src/components/SideBar/SidebarData.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Map/index.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Graph/index.js",["167","168"],"import React from 'react';\nimport { Chart, Row, Col } from 'react-google-charts'\nimport { Container } from 'react-bootstrap';\n\nexport default function Graph() {\n    return (\n        <Container fluid>\n            <Chart\n                width={'100%'}\n                height={'470px'}\n                chartType=\"LineChart\"\n                loader={<div>Carregando</div>}\n                data={\n                    [\n                        ['x', 'Cachorro'],\n                        [0, 0],\n                        [1, 10],\n                        [2, 23],\n                        [3, 17],\n                        [4, 18],\n                        [5, 9],\n                        [6, 11],\n                        [7, 27],\n                        [8, 33],\n                        [9, 40],\n                        [10, 32],\n                        [11, 35],\n                    ]\n                }\n                options={{\n                    hAxis: {\n                        title: 'Tempo'\n                    },\n                    vAxis: {\n                        title: 'Popularidade'\n                    },\n                }}\n                rootProps={{ 'data-testid': '1' }}\n            />\n\n\n        </Container>\n    )\n}","/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Table/index.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Indicator/index.js",[],"/Users/arleysouto/Documents/Aplicacao/src/components/Pages/Home/index.js",["169","170","171"],"import React, { useState, useEffect } from 'react';\nimport { Col, Row, Container, CardDeck, Card, Jumbotron } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { BsClipboardData, BsGraphUp } from 'react-icons/bs'\nimport { AiOutlineInfoCircle } from 'react-icons/ai'\nimport {SiOpenstreetmap} from 'react-icons/si'\nimport {RiAddFill} from 'react-icons/ri'\nimport Graph from '../../Pages/Graph';\nimport './styles.css';\n\nexport default function Home() {\n    const [navigation, setNavigation] = useState([\n        { id: '1', title: 'Adicionar dispositivo', info: 'Cadastrar novo didpositivo', icon: <RiAddFill size={40} />, nav: '/tabela' },\n        { id: '2', title: 'Indicador', info: 'Informações do Dispositivo', icon: <AiOutlineInfoCircle size={50} />, nav: '/indicator' },\n        { id: '3', title: 'Localizações dos dispositivos', info: 'Localização', icon: <SiOpenstreetmap size={50} />, nav: '/graph' },\n    ]);\n\n    useEffect(() => {\n\n    }, [])\n\n\n\n    return (\n\n\n        <Container fluid>\n            <Row lg={true}>\n                <Col lg='3' >\n                    <Jumbotron>\n                        <CardDeck style={{ textAlign: 'center' }}>\n                            {navigation.map(dados => (\n                                <Link to={dados.nav} style={{ textDecoration: 'none' }}>\n                                    <Card style={{ marginBottom: '5%' }}>\n                                        <Card.Body>\n                                            <Card.Title>{dados.title}</Card.Title>\n                                            {dados.icon}\n                                            <Card.Text>\n                                                {dados.info}\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                </Link>\n                            ))}\n                        </CardDeck>\n                    </Jumbotron>\n\n                </Col>\n                <Col>\n                    <div className=\"info\">\n                        <CardDeck>\n                            <Card bg=\"danger\" text='light'>\n                                <Card.Body>\n                                    <Card.Title>Temperatura</Card.Title>\n                                    <Card.Text>\n                                    <h1><strong>41ºC</strong></h1>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                            <Card bg=\"light\">\n                                <Card.Body>\n                                    <Card.Title>Humidade</Card.Title>\n                                    <Card.Text>\n                                    <h1><strong>30%</strong></h1>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                            <Card bg=\"success\" text='light'>\n                                <Card.Body>\n                                    <Card.Title>Bateria</Card.Title>\n                                    <Card.Text>\n                                    <h1><strong>90%</strong></h1>\n                                    </Card.Text>\n\n                                </Card.Body>\n                            </Card>\n                        </CardDeck>\n                        <br></br>\n                        <Card>\n                            <Card.Body>\n                                <Card.Title>Gráfico</Card.Title>\n                                <Graph/>\n                            </Card.Body>\n                        </Card>\n\n\n                    </div>\n                </Col>\n            </Row>\n        </Container >\n\n\n\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/index.js",[],["172","173"],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/reportWebVitals.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/App.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SideBar/index.js",["174"],"import React, {useState} from 'react';\nimport {Nav} from 'react-bootstrap';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport {Link} from 'react-router-dom';\nimport {SidebarData} from './SidebarData';\nimport { IconContext } from 'react-icons';\nimport {GiHamburgerMenu} from 'react-icons/gi'\nimport './styles.css';\n\nexport default function Sidebar(){\n    const [sidebar, setSaidebar] = useState(false);\n\n    const showSidebar = () => setSaidebar(!sidebar)\n\n    return(\n        \n          <IconContext.Provider value={{ color: '#FFF' }}>\n        <div>\n          <Link to='#' >\n            <GiHamburgerMenu size={35} onClick={showSidebar} />\n          </Link>\n        </div>\n        <Nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n          <ul className='nav-menu-items' onClick={showSidebar}>\n            <li className='navbar-toggle'>\n              <Link to='#' className='menu-bars'>\n                <AiIcons.AiOutlineClose size={20} />\n              </Link>\n            </li>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </Nav>\n      </IconContext.Provider>\n        \n    )\n}",["175","176"],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/Header/index.js",["177","178","179","180","181"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nimport LogoIBTI from '../../assets/Logo-IBTI.png';\nimport { FaUserCircle } from 'react-icons/fa'\n\nimport { Dropdown, Form, Button } from 'react-bootstrap';\n\n\n\n\nexport default function Header() {\n\n\n\n\n\n\n\n    return (\n        <div className=\"style\">\n            <header className=\"container\">\n                <Link to=\"/\">\n                    <img className=\"logo\" src={LogoIBTI} width=\"100\" height=\"100\" />\n                </Link>\n                <Dropdown>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    <FaUserCircle size={50} color=\"#FFF\" />\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>User</Dropdown.Item>\n                        <Dropdown.Item>Settings</Dropdown.Item>\n                        <Dropdown.Item>Sair</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </header>\n        </div>\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/rotas.js",["182","183"],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Indicator/index.js",["184"],"import React, { useEffect } from 'react'\nimport { Container, Jumbotron, Card, Col, Row, Button } from 'react-bootstrap';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Logo from '../../assets/logo.svg'\nimport { Link } from 'react-router-dom';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { useSelector } from 'react-redux'//necessario para usar o useSelector do redux\nimport './styles.css';\n\n\nexport default function Indicator() {\n    const selectedDevice = useSelector((state) => state.devicesState.selectedDevice);//chama um dispositivo especifico do Redux\n    const devices = useSelector((state) => state.devicesState.devices)\n    const dadosDevice = useSelector((state) => state.devicesState.dadosDevice);\n\n    useEffect(() => {\n        console.log(dadosDevice.filter((device) => device.device === selectedDevice)[0] ?\n            dadosDevice.filter((device) => device.device === selectedDevice)[0].type : \"UNDEFINED\");\n    }, [selectedDevice])//fica observando caso tenha alguma alteração\n\n    function getDate(timeSecs){\n        const dateObject = new Date(timeSecs * 1000)\n        const humanDateFormat = dateObject.toLocaleString() //20/04/2021 10:30:15\n    \n        return humanDateFormat\n    }\n    \n\n    return (\n        <Container fluid>\n            <Link to=\"/\" >\n                <Button variant=\"light\" style={{ marginBottom: '2%' }}><IoMdArrowRoundBack size={30} /></Button>\n            </Link>\n\n            <Jumbotron>\n\n                <h1 className=\"titleInfo\">Informações</h1>\n                <Row>\n\n                    <Col lg=\"3\">\n\n                        <Card style={{ marginTop: '6%' }}>\n                            <Card.Body>\n                                <Card.Img src={Logo} />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n\n                        {\n\n                            selectedDevice === \"\" ? (\n                                dadosDevice.length > 0 ? (\n                                    dadosDevice[0].type ?\n                                        dadosDevice[0].type === \"temp\" ?\n                                            <ListGroup>\n                                                <ListGroup.Item>Dispositivo: {selectedDevice === '' ? (devices.length > 0 ? devices[0].device : \"\") : devices.filter((device) => device.device === selectedDevice)[0].device} </ListGroup.Item>\n                                                <ListGroup.Item>Data do ultimo envio: {getDate(selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].ts : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].ts)} </ListGroup.Item>\n                                                <ListGroup.Item>Bateria: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria} </ListGroup.Item>\n                                            </ListGroup>\n                                            :\n                                            <ListGroup>\n                                                <ListGroup.Item>Dispositivo: {selectedDevice === '' ? (devices.length > 0 ? devices[0].device : \"\") : devices.filter((device) => device.device === selectedDevice)[0].device} </ListGroup.Item>\n                                                <ListGroup.Item>Data do ultimo envio: {getDate( selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].ts : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].ts)} </ListGroup.Item>\n                                                <ListGroup.Item>Latitude: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].lat : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].lat} </ListGroup.Item>\n                                                <ListGroup.Item>Longitude: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].long : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].long}</ListGroup.Item>\n                                                <ListGroup.Item>Bateria: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria} </ListGroup.Item>\n                                            </ListGroup>\n                                        : \"\"\n                                )\n                                    : \"\"\n                            ) : (\n                                dadosDevice.filter((device) => device.device === selectedDevice)[0] ?\n                                    dadosDevice.filter((device) => device.device === selectedDevice)[0].type === \"temp\" ?\n                                        <ListGroup>\n                                            <ListGroup.Item>Dispositivo: {selectedDevice === '' ? (devices.length > 0 ? devices[0].device : \"\") : devices.filter((device) => device.device === selectedDevice)[0].device} </ListGroup.Item>\n                                            <ListGroup.Item>Data do ultimo envio: {getDate( selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].ts : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].ts)} </ListGroup.Item>\n                                            <ListGroup.Item>Bateria: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria} </ListGroup.Item>\n                                        </ListGroup>\n                                        :\n                                        <ListGroup>\n                                            <ListGroup.Item>Dispositivo: {selectedDevice === '' ? (devices.length > 0 ? devices[0].device : \"\") : devices.filter((device) => device.device === selectedDevice)[0].device} </ListGroup.Item>\n                                            <ListGroup.Item>Data do ultimo envio: {getDate( selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].ts : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].ts)} </ListGroup.Item>\n                                            <ListGroup.Item>Latitude: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].lat : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].lat} </ListGroup.Item>\n                                            <ListGroup.Item>Longitude: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].long : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].long}</ListGroup.Item>\n                                            <ListGroup.Item>Bateria: {selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria} </ListGroup.Item>\n                                        </ListGroup>\n                                    :\n                                    \"\"\n                            )\n\n                        }\n\n                        <Link to=\"/tabela\">\n                            <Button variant=\"warning\" style={{ marginTop: '2%' }}>Historico</Button>\n                        </Link>\n                    </Col>\n                </Row>\n\n\n            </Jumbotron>\n        </Container>\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Graph/index.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Home/index.js",["185","186","187"],"import React, { useState, useEffect } from 'react';\nimport { Col, Row, Container, CardDeck, Card, Jumbotron, Form } from 'react-bootstrap';\nimport Graph from '../../Pages/Graph';\nimport './styles.css';\nimport Mapa from '../Map';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nexport default function Home() {\n    const selectedDevice = useSelector((state) => state.devicesState.selectedDevice);\n    const dadosDevice = useSelector((state) => state.devicesState.dadosDevice);\n\n\n\n    useEffect(() => { }, [selectedDevice, dadosDevice])\n\n    console.log(dadosDevice.filter((device) => device.device === selectedDevice)[0] ?\n        dadosDevice.filter((device) => device.device === selectedDevice)[0].type : \"UNDEFINED\");\n\n    return (\n\n\n        <Container fluid style={{ margin: '40px 0px', marginBottom: '20%' }}>\n            <Row lg={true}>\n\n\n                <Col style={{ marginBottom: '5%' }}>\n                    {/* <p>VARIÁVEL: {JSON.stringify(dadosDevice)}</p> */}\n\n                    {\n\n                        selectedDevice === \"\" ? (\n                            dadosDevice.length > 0 ? (\n                                dadosDevice[0].type ?\n                                    dadosDevice[0].type === \"temp\" ?\n                                        <div>\n                                            <Jumbotron>\n                                                <CardDeck>\n                                                    <Card bg=\"success\" text='light'>\n                                                        <Card.Body>\n                                                            <Card.Title>Tensão da Bateria</Card.Title>\n                                                            <Card.Text>\n                                                                <h1><strong>{selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria}v</strong></h1>\n                                                            </Card.Text>\n                                                        </Card.Body>\n                                                    </Card>\n                                                    <Card bg=\"danger\" text='light'>\n                                                        <Card.Body>\n                                                            <Card.Title>Temperatura</Card.Title>\n                                                            <Card.Text>\n                                                                <h1><strong>{selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].temp : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].temp.toFixed(2)}%</strong></h1>\n                                                            </Card.Text>\n                                                        </Card.Body>\n                                                    </Card>\n                                                    <Card bg=\"light\" text='black'>\n                                                        <Card.Body>\n                                                            <Card.Title>Umidade</Card.Title>\n                                                            <Card.Text>\n                                                                <h1><strong>{selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].hum : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].hum.toFixed(2)}%</strong></h1>\n                                                            </Card.Text>\n                                                        </Card.Body>\n                                                    </Card>\n                                                </CardDeck>\n                                            </Jumbotron>\n                                            <Jumbotron>\n                                                <Col lg=\"12\" style={{ marginBottom: '5%' }}>\n                                                    <h2 style={{ textAlign: 'center', marginBottom: '2%' }}>Gráfico</h2>\n                                                    <Card>\n                                                        <Card.Body>\n                                                            <Graph />\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                            </Jumbotron>\n                                        </div>\n                                        :\n                                        <div>\n                                                <Jumbotron>\n                                                    <Col>\n                                                        <CardDeck>\n                                                            <Card bg=\"success\" text='light' >\n                                                                <Card.Body>\n                                                                    <Card.Title>Tensão da Bateria</Card.Title>\n                                                                    <Card.Text>\n                                                                        <h1><strong>{selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria}v</strong></h1>\n                                                                    </Card.Text>\n                                                                </Card.Body>\n                                                            </Card>\n                                                        </CardDeck>\n                                                    </Col>\n                                                </Jumbotron>\n                                                <Jumbotron>\n                                                    <Col lg=\"12\" style={{ textAlign: 'center', marginBottom: '2%' }}>\n                                                        <h2 style={{ textAlign: 'center', marginBottom: '2%' }}>Mapa</h2>\n                                                        <Card>\n                                                            <Card.Body>\n                                                                <Mapa />\n                                                            </Card.Body>\n                                                        </Card>\n                                                    </Col>\n                                                </Jumbotron>\n                                        </div>\n                                    : \"\"\n                            )\n                                : \"\"\n                        ) : (\n                            dadosDevice.filter((device) => device.device === selectedDevice)[0] ?\n                                dadosDevice.filter((device) => device.device === selectedDevice)[0].type === \"temp\" ?\n                                    <div>\n                                        <Jumbotron>\n                                            <h2 style={{ textAlign: 'center' }}>Informações do Dispositivo</h2>\n                                            <CardDeck style={{ marginBottom: '2%' }}>\n                                                <Card bg=\"success\" text='light'>\n                                                    <Card.Body>\n                                                        <Card.Title>Tensão da Bateria</Card.Title>\n                                                        <Card.Text>\n                                                            <h1><strong>{selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria}v</strong></h1>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                                <Card bg=\"danger\" text='light'>\n                                                    <Card.Body>\n                                                        <Card.Title>Temperatura</Card.Title>\n                                                        <Card.Text>\n                                                            <h1><strong>{selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].temp : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].temp.toFixed(2)}%</strong></h1>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                                <Card bg=\"light\" text='black'>\n                                                    <Card.Body>\n                                                        <Card.Title>Umidade</Card.Title>\n                                                        <Card.Text>\n                                                            <h1><strong>{selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].hum : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].hum.toFixed(2)}%</strong></h1>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </CardDeck>\n                                        </Jumbotron>\n                                        <Jumbotron>\n                                            <Col lg=\"12\" style={{ marginBottom: '5%' }}>\n                                                <h2 style={{ textAlign: 'center', marginBottom: '2%' }}>Gráfico</h2>\n                                                <Card>\n                                                    <Card.Body>\n                                                        <Graph />\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                        </Jumbotron>\n                                    </div>\n                                    :\n                                    <div>\n                                        <Jumbotron>\n\n                                            <Col>\n                                                <h2 style={{ textAlign: 'center', marginBottom: '2%'  }}>Informações do Dispositivo</h2>\n                                                \n                                                <CardDeck style={{ textAlign: 'center', marginBottom: '2%' }}>\n                                                <Container >\n                                                <Row>\n                                                    <Col sm={12} style={{ marginLeft: '290px'}}>  \n                                                    <Card bg=\"success\" text='light' >\n                                                        <Card.Body>\n                                                            <Card.Title>Tensão da Bateria</Card.Title>\n                                                            <Card.Text>\n                                                                <h1><strong>{selectedDevice === '' ? (dadosDevice.length > 0 ? dadosDevice[0].bateria : \"\") : dadosDevice.filter((device) => device.device === selectedDevice)[0].bateria}v</strong></h1>\n                                                            </Card.Text>\n                                                        </Card.Body>\n                                                    </Card>\n                                                    </Col>\n                                                    </Row>\n                                                </Container>\n                                                </CardDeck>\n                                               \n                                            </Col>\n                                        </Jumbotron>\n\n                                        <Jumbotron>\n                                            <Col style={{ textAlign: 'center', marginBottom: '2%' }}>\n                                                <h2 style={{ textAlign: 'center', marginBottom: '2%' }}>Mapa</h2>\n                                                <Card>\n                                                    <Card.Body>\n                                                        <Mapa />\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                        </Jumbotron>\n                                    </div>\n                                :\n                                \"\"\n                        )\n\n                    }\n\n\n                </Col>\n\n\n            </Row>\n        </Container >\n\n\n\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Table/index.js",["188"],"import { Container, Table, Button, Col, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport {getDate, GetDadosDevice} from '../../store/functions'\n\n\nexport default function Tabela() {\n    const {device,dadosDevice,propsDevice} = GetDadosDevice()\n\n\n    return (\n        <Container fluid>\n            <Link to=\"/indicator\">\n                <Button variant=\"light\"><IoMdArrowRoundBack size={30} /></Button>\n            </Link>\n     \n            <Row lg={true} style={{ marginTop: '2%' }}>\n\n                <Col lg=\"12\">\n                    <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                                <th>Device</th>\n                                <th>Type</th>\n                                <th>Data</th>\n                                {propsDevice.includes('temp') ? <th>Temperatura</th>:\"\"}\n                                {propsDevice.includes('hum') ? <th>Humidade</th>:\"\"}\n                                {propsDevice.includes('lat') ? <th>Latitude</th>:\"\"}\n                                {propsDevice.includes('long') ? <th>Longitude</th>:\"\"}\n                                {propsDevice.includes('velocidade') ? <th>Velocidade</th>:\"\"}\n                                {propsDevice.includes('bateria') ? <th>Bateria</th>:\"\"}\n                            </tr>\n                        </thead>\n                        {\n                            //{if(1) Device}\n                            dadosDevice.map((dev) => (\n                                <tbody>\n                                    <tr>\n                                        {/* <td>{dev.device}</td> */}\n                                        <td>{dev.device}</td>\n                                        <td>{dev.type}</td>\n                                        <td>{getDate(dev.ts)}</td>\n                                        {propsDevice.includes('temp')       ? <td>{parseFloat(dev.temp).toFixed(1)}°C</td>:\"\"}\n                                        {propsDevice.includes('hum')        ? <td>{parseFloat(dev.hum).toFixed(1)}%</td>:\"\"}\n                                        {propsDevice.includes('lat')        ? <td>{parseFloat(dev.lat).toFixed(3)}°</td>:\"\"}\n                                        {propsDevice.includes('long')       ? <td>{parseFloat(dev.long).toFixed(3)}°</td>:\"\"}\n                                        {propsDevice.includes('velocidade') ? <td>{dev.velocidade} km/h</td>:\"\"}\n                            {propsDevice.includes('bateria')    ? <td>{parseFloat(dev.bateria).toFixed(2)}V</td>:\"\"}\n                                    </tr>\n                                </tbody>\n                            ))\n                        }\n                    </Table>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/Map/index.js",["189","190","191","192","193","194","195"],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Connections/api.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/index.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/rootReducer.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/Devices/reducer.js",["196"],"import { ATUALIZAR_DEVICES, SELECT_DEVICE, CADASTRO_EVERY, DADOS_DEVICE, dadosDevice } from './actions';\n\nconst initialState = {\n    devices: [],\n    selectedDevice: '',\n    cadastroEvery: [],\n    dadosDevice: []\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case ATUALIZAR_DEVICES:\n            return {\n                ...state,\n                devices: payload\n            }\n        case SELECT_DEVICE:\n            return {\n                ...state,\n                selectedDevice: payload\n            }\n        case CADASTRO_EVERY:\n            return {\n                ...state,\n                cadastroEvery: payload\n            }\n        case DADOS_DEVICE:\n            return {\n                ...state,\n                dadosDevice: payload,\n                selectedDevice: payload[0].device\n            }\n        default:\n            return state\n    }\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/Modulos/Devices/actions.js",[],"/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/CadastroEvery/index.js",["197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"import React, { useState } from 'react';\nimport './styles.css';\nimport {\n    Accordion,\n    Form,\n    Col,\n    Button,\n    Row,\n    Container,\n    Card,\n    Badge,\n    InputGroup,\n    FormControl,\n    Dropdown\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { BsFillTrashFill, BsPencil } from 'react-icons/bs'\nimport { FaPlusCircle } from 'react-icons/fa'\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward, IoMdAdd } from 'react-icons/io';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { cadastroEvery, dadosDevice } from '../../store/Modulos/Devices/actions';\n\n\n\n\nexport default function CadastroEvery() {\n    const [dispositivoEUI, setDispositivoEUI] = useState('');\n    const [aplicacaoEUI, setAplicacaoEUI] = useState('');\n    //const [tags, setTags] = useState([]);\n    const [netWorkSessionKey, setNetWorkSessionKey] = useState('');\n    const [applicationSessionKey, setApplicationiSessionKey] = useState('');\n    const [checkActivation, setCheckActivation] = useState(false);\n    const [selectType, setSelectType] = useState('');\n    const [cadasto, setCadastro] = useState()\n    const dispatch = useDispatch()\n\n    const cadastroEveryNet = useSelector((state) => state.devicesState.cadastroEvery);\n    const selectedDevice = useSelector((state) => state.devicesState.selectedDevice);\n    const dadosDevice = useSelector((state) => state.devicesState.dadosDevice);\n    const devices = useSelector((state) => state.devicesState.devices);\n\n\n    console.log(cadasto)\n    console.log(checkActivation)\n    function Cadastro() {\n        const data = {\n            dispositivoEUI: dispositivoEUI,\n            aplicacaoEUI: aplicacaoEUI,\n            //tags: tags,\n            netWorkSessionKey: netWorkSessionKey,\n            applicationSessionKey: applicationSessionKey,\n            activation: checkActivation,\n            cadastroVariavel: cadastroEveryNet\n        }\n\n        setCadastro(data)\n        setCadastro('')\n    }\n\n    console.log(selectType)\n\n\n\n\n    return (\n        <Container style={{ margin: '20px 0px', marginBottom: '20%' }} fluid>\n            <div>\n                <Link to=\"/\">\n                    <Button variant=\"light\" style={{ marginBottom: '2%' }}><IoMdArrowRoundBack size={30} /></Button>\n                </Link>\n            </div>\n\n            <Row>\n                <Col lg=\"6\" >\n\n\n\n                    <h4>Cadastro dispositivo</h4>\n                    {\n                        checkActivation === false\n                            ?\n                            <Form>\n                                <Form.Control value={dispositivoEUI} onChange={(e) => setDispositivoEUI(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Disposito EUI\" />\n                                <Form.Control value={aplicacaoEUI} onChange={(e) => setAplicacaoEUI(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Aplicação EUI\" />\n                                <Form.Check value={checkActivation} onChange={(e) => setCheckActivation(e.target.checked)} type=\"switch\" id=\"custom-switch\" label={checkActivation === true ? \"OTAA\" : \"Activation ABP\"}  style={{ marginBottom: '2%' }} />\n                            </Form>\n                            :\n\n                            <Form>\n                                <Form.Control value={dispositivoEUI} onChange={(e) => setDispositivoEUI(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Disposito EUI\" />\n                                <Form.Control value={aplicacaoEUI} onChange={(e) => setAplicacaoEUI(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Aplicação EUI\" />\n                                <Form.Check value={checkActivation} onChange={(e) => setCheckActivation(e.target.checked)} type=\"switch\" id=\"custom-switch\" label={checkActivation === true ? \"Activation OTAA\" : \"Activation ABP\"} style={{ marginBottom: '2%' }} />\n                                <Form.Control value={netWorkSessionKey} onChange={(e) => setNetWorkSessionKey(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Network session key\" />\n                                <Form.Control value={applicationSessionKey} onChange={(e) => setApplicationiSessionKey(e.target.value)} style={{ marginBottom: '2%' }} placeholder=\"Application session key\" />\n                            </Form>\n                    }\n\n\n                    {/* <Form.Control\n                            className=\"TagForm\"\n                            type=\"text\"\n                            placeholder=\"Tags\"\n                            onKeyPress={event => {\n                                if (event.key === \"Enter\") {\n                                    setTags([...tags, event.target.value])\n                                    event.target.value = \"\";\n                                }\n                            }}\n                        /> */}\n\n                    {/* <ul className=\"TagList\">\n                            {tags.map((tag, index) => (\n                                <li key={index} className=\"Tag\">\n                                    {tag}\n                                    <BsFillTrashFill\n                                        size={20}\n                                        onClick={() => { setTags([...tags.filter(device => device !== tag)]) }}\n                                    />\n                                </li>\n                            ))}\n                        </ul> */}\n                    <Form.Label>Tipo do Dispositivo (Utilizado para definir tipos de dados a receber):</Form.Label>\n                    <Dropdown>\n                        <Dropdown.Toggle\n                            id=\"dropdown-custom-components\"\n                            style={{\n                                width: '50%',\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                justifyContent: 'space-between',\n                                marginBottom:'2%'\n\n                            }}>\n                            {selectedDevice === '' ? (devices.length > 0 ? devices[0].type : \"\") : devices.filter((dev) => dev.device === selectedDevice)[0].type}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu style={{ width: '50%', marginBottom: '-38%' }}>\n                            {\n                                devices.map((item) =>(\n                                    <Dropdown.Item  eventKey={event => {\n                                        if (event.key === \"Click\") {\n                                            setSelectType([...selectType, event.target.value])\n                                            event.target.value = \"\";\n                                        }\n                                    }}>{item.type}</Dropdown.Item>\n                                ))   \n                            }\n                            <Link to=\"/cadastro/cadastrar-variaveis\" className=\"nextCad\" style={{textDecoration:'none'}}>\n                                <Button  variant=\"success\"><IoMdAdd size={30} /> Cadastrar Novo Tipo</Button>\n                            </Link>\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                            <Button  onClick={Cadastro} variant=\"success\">Cadastrar Dispositivo</Button>\n                </Col>\n\n\n            </Row>\n        </Container>\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/Pages/CadastroVariaveis/index.js",["211","212","213","214","215","216","217","218","219"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Jumbotron, Form, Modal, Badge, Card } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { MdRemoveCircleOutline } from 'react-icons/md';\nimport { VscSymbolOperator } from 'react-icons/vsc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cadastroEvery, dadosDevice } from '../../store/Modulos/Devices/actions';\n\nimport './styles.css';\n\nexport default function CadastroVariaveis({ navigation }) {\n\n    const [form, setForm] = useState({ cards: [] });\n    const [cadastro, setCadastro] = useState();\n    const [operations, setOperations] = useState([\n        {\n            id: 0, name: 'Operação', value: null\n        },\n        {\n            id: 1, name: \"Soma\", value: \"sum\"\n        },\n        {\n            id: 2, name: \"Divisão\", value: \"div\"\n        },\n        {\n            id: 3, name: \"Multiplicação\", value: \"mux\"\n        },\n        {\n            id: 4, name: \"Máscara\", value: \"mask\"\n        },\n    ]);\n    const [ordemByte, setOrdemBytes] = useState([{ id: 0, name: '', value: '' }, { id: 1, name: 'Little-endian (trás p/ frente)', value: 'little' }, { id: 2, name: 'Big-endian (frente p/ trás)', value: 'big' },])\n    const [saveOrdemByte, setSaveOrdemByte] = useState(1);\n    const [tamanhoByte, setTamanhoByte] = useState('');\n    const [nome, setNome] = useState('');\n\n\n    const dispatch = useDispatch()\n\n\n\n    const addNewCamp = () => {\n        let newForm = { ...form }\n        let newCard = {\n            variavel: \"\",\n            bitInicial: \"\",\n            bitFinal: \"\",\n            args: \"\",\n            operationsSelects: []\n        }\n        newForm.cards.push(newCard);\n        setForm(newForm)\n    }\n\n    const addNewOperation = (index) => {\n        let newForm = { ...form }\n        let newOperationSelect = {\n            operacao: []\n        }\n        newForm.cards[index].operationsSelects.push(newOperationSelect);\n        setForm(newForm)\n    }\n\n    const onFormUpdate = (e, index) => {\n        let newForm = { ...form }\n        newForm.cards[index][e.target.name] = e.target.value;\n        setForm(newForm)\n    }\n\n    function onOperationSelectUpdate(e, cardIndex, selectIndex) {\n        let newForm = { ...form };\n        newForm.cards[cardIndex].operationsSelects[selectIndex].operacao = e.target.value;\n        setForm(newForm);\n    }\n\n    function onOrdemByte(e) {\n        setOrdemBytes(e.target.value)\n    }\n\n    function operationRemove(cardIndex, selectIndex) {\n        let newForm = { ...form };\n        newForm.cards[cardIndex].operationsSelects.splice(selectIndex, 1);\n        setForm(newForm);\n    }\n\n\n\n    const removeOperacao = (cardIndex, selectIndex) => {\n        //setForm([...newCard.filter((_, index) => index !== position)])\n        let newForm = { ...form };\n        newForm.cards.splice(cardIndex, 1)\n        setForm(newForm);\n\n    }\n\n\n\n    console.log(cadastroEvery)\n\n    function handleCadastro() {\n\n        const params = {\n            card: form,\n            ordemByte: saveOrdemByte,\n            tamanhoByte: tamanhoByte,\n            nome: nome,\n        }\n        dispatch(cadastroEvery(params))\n\n\n\n    }\n\n\n\n\n\n    return (\n        <Container fluid>\n            <Link to=\"/cadastro\">\n                <Button variant=\"light\" style={{ marginBottom: '2%' }}><IoMdArrowRoundBack size={30} /></Button>\n            </Link>\n            <Row lg=\"12\">\n\n                <Col>\n                    <h3 style={{ textAlign: 'center' }}>Dados do Dispositivo</h3>\n                    <Form onSubmit={handleCadastro}>\n                        <Jumbotron>\n                            <Form.Row>\n                                <Col lg=\"3\">\n                                    <Form.Label>Nome do Tipo</Form.Label>\n                                    <Form.Control value={nome} onChange={(e) => setNome(e.target.value)} style={{ marginBottom: '10px' }} maxLength={10} />\n                                </Col>\n                                <Col lg=\"2\">\n                                    <Form.Label>Tamanho em Bytes</Form.Label>\n                                    <Form.Control value={tamanhoByte} onChange={(e) => setTamanhoByte(e.target.value)} style={{ marginBottom: '10px' }} maxLength={10} />\n                                </Col>\n                            </Form.Row>\n                            <Form.Row>\n                                <Col lg=\"2\">\n                                    <Form.Label>Ordem dos bits de dados</Form.Label>\n                                    <Form.Control value={saveOrdemByte} onChange={e => setSaveOrdemByte(e.target.value)} style={{ marginBottom: '10px' }} as=\"select\" custom>\n                                        {ordemByte.map((byte) => (\n                                            <option key={byte.id} value={byte.value}>{byte.name}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Col>\n                            </Form.Row>\n                            <Form.Label>Variáveis</Form.Label>\n\n                            {form.cards.length > 0 && form.cards.map((card, index) => (\n                                <Card body key={index} style={{ marginBottom: '3%', borderRadius: '5px' }}>\n                                    {`Campo ${index + 1}`}\n\n                                    <Form.Row>\n                                        <Row>\n                                            <Col lg=\"12\">\n                                                <Form.Control style={{ marginBottom: '1%', width: '40%', marginRight: '1%' }} name=\"variavel\" onChange={(e) => onFormUpdate(e, index)} placeholder={`Variavel ${index + 1}`} />\n                                                <Form.Control style={{ marginBottom: '1%', width: '30%', marginRight: '1%' }} name=\"bitInicial\" onChange={(e) => onFormUpdate(e, index)} placeholder={`BitInicial ${index + 1}`} />\n                                                <Form.Control style={{ marginBottom: '1%', width: '30%', marginRight: '1%' }} name=\"bitFinal\" onChange={(e) => onFormUpdate(e, index)} placeholder={`BitFinal ${index + 1}`} />\n\n                                                {form.cards[index].operationsSelects &&\n                                                    form.cards[index].operationsSelects.length > 0 &&\n                                                    form.cards[index].operationsSelects.map((operationSelect, i) => (\n\n\n                                                        <Form.Row key={i} >\n                                                            <Col>\n                                                                <Form.Control style={{ marginRight: '1%', width: '100%', marginBottom: '2%' }} value={form.cards[index].operationsSelects[i].operacao} onChange={(e) => onOperationSelectUpdate(e, index, i)} as=\"select\">\n                                                                    {operations.map((operation) => (\n                                                                        <option key={operation.id} value={operation.value}>{operation.name}</option>\n                                                                    ))}\n                                                                </Form.Control>\n                                                            </Col>\n\n\n                                                            <Col>\n                                                                <Form.Control placeholder=\"ARGS\" name=\"args\" onChange={(e) => onFormUpdate(e, index)} />\n                                                            </Col>\n                                                            <Col>\n                                                                <Badge style={{ justifyContent: 'center', alignItems: 'center', marginTop: 5 }} onClick={() => operationRemove(index, i)} variant=\"danger\"  ><MdRemoveCircleOutline size={20} /></Badge>\n                                                            </Col>\n\n                                                        </Form.Row>\n\n\n\n                                                    ))\n                                                }\n                                            </Col>\n                                            <Col>\n                                                <Button onClick={() => addNewOperation(index)} variant=\"success\"><VscSymbolOperator size={25} /></Button>\n                                                <Button style={{ marginLeft: '2%' }} onClick={() => removeOperacao(index)} variant=\"danger\"><MdRemoveCircleOutline size={25} /></Button>\n                                            </Col>\n                                        </Row>\n                                    </Form.Row>\n\n                                </Card>\n                            ))\n\n                            }\n\n                            <Form.Row>\n                                <Button style={{ marginBottom: '10px' }} variant=\"success\" onClick={() => addNewCamp()}>Adicionar variável</Button>\n                            </Form.Row>\n\n\n\n                        </Jumbotron>\n                        <Link to=\"/cadastro\">\n                            <Button onClick={handleCadastro} variant=\"success\">Adicionar tipo</Button>\n                        </Link>\n\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SelectDeviceCombo/index.js",["220","221","222"],"import React, { useState, useEffect } from 'react';\nimport { Form, Card, CardDeck, Row, Col } from 'react-bootstrap';\nimport api from '../../Connections/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\nimport { selecionarDevice, atualizarDevices, dadosDevice } from '../../store/Modulos/Devices/actions';\n\nimport { MdPhotoSizeSelectLarge } from 'react-icons/md';\nimport { AiOutlineHome } from 'react-icons/ai';\nimport { BsPlusSquare } from 'react-icons/bs';\nimport { GiRiotShield } from 'react-icons/gi';\nimport { BsInfoCircle } from 'react-icons/bs';\n\nexport default function Combo() {\n\n\n    const devices = useSelector((state) => state.devicesState.devices)\n    const selectedDevice = useSelector((state) => state.devicesState.selectedDevice)\n    //const dadosDevice = useSelector((state) =>  state.devicesState.dadosDevice);\n    //console.log(selectedDevice)\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        handleDevices()\n        selectData()\n    }, [selectedDevice])\n\n    async function handleDevices() {\n\n        await api.get(`devices`)\n            .then((res) => {\n                dispatch(atualizarDevices(res.data))\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function equacionarDadosDevices(dadosDevice) {\n        return dadosDevice.map((dados) => {\n            if (dados.type) {\n                return dados;\n            }\n            else {\n                return {\n                    ...dados,\n                    type: \"\"\n                }\n            }\n        })\n    }\n\n    async function selectData() {\n        const id = selectedDevice === '' ? (devices.length > 0 ? devices[0].device : \"\") : devices.filter((dev) => dev.device === selectedDevice)[0].device\n        console.log(id)\n        await api.get(`data?dev_addr=${id}&limit=100`)\n            .then((res) => {\n                dispatch(dadosDevice(equacionarDadosDevices(res.data)));\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n    return (\n        <div>\n            <Row>\n                <Col lg=\"7\" style={{justifyContent:'center', alignItems:'center', margin:'auto'}}>\n                    <CardDeck className=\"menuCard\">\n                        <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                            <Card>\n                                <Card.Body className=\"cardBody\">\n                                    <AiOutlineHome className=\"icons\" size={40} />\n                                    <Card.Text>Home</Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </Link>\n                        <Link to=\"/cadastro\" style={{ textDecoration: 'none' }}>\n                            <Card>\n                                <Card.Body className=\"cardBody\">\n                                    <BsPlusSquare className=\"icons\" size={40} />\n                                    <Card.Text>Cadastrar</Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </Link>\n                        <Link to=\"/cadastro\" style={{ textDecoration: 'none' }}>\n                            <Card>\n                                <Card.Body className=\"cardBody\">\n                                    <GiRiotShield className=\"icons\" size={40} />\n                                    <Card.Text>Dispositivos</Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </Link>\n                        <Link to=\"/indicator\" style={{ textDecoration: 'none' }}>\n                            <Card>\n                                <Card.Body className=\"cardBody\">\n                                    <BsInfoCircle className=\"icons\" size={40} />\n                                    <Card.Text>Informações</Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </Link>\n                    </CardDeck>\n                </Col>\n                \n                    <Form.Control style={{ width: '16%', marginLeft: '80%'}} value={selectedDevice} onChange={(e) => dispatch(selecionarDevice(e.target.value))} as=\"select\">\n                        {devices.length && devices.length > 0 ? devices.map((dev) => (\n                            <option key={dev.device} value={dev.device}>{dev.device}</option>\n                        )) :\n                            (\n                                <option>Nenhum dispositivo</option>\n                            )\n                        }\n                    </Form.Control>\n               \n            </Row>\n\n\n\n        </div>\n    )\n}","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/components/SideBar/SidebarData.js",["223","224"],"import React from 'react';\nimport * as BiDevices from 'react-icons/bi';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\nimport * as RiAddFill from 'react-icons/ri';\nimport * as BiMapPin from 'react-icons/bi';\nimport * as FiLogOut from 'react-icons/fi';\n\n\nexport const SidebarData = [\n  {\n    title: 'Home',\n    path: '/',\n    icon: <AiIcons.AiFillHome />,\n    cName: 'nav-text',\n    \n  },\n  {\n    title: 'Cadastrar Dispositivo',\n    path: '/cadastro',\n    icon: <RiAddFill.RiAddFill/>,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Informações',\n    path: '/indicator',\n    icon: <BiDevices.BiDevices />,\n    cName: 'nav-text'\n  },\n  {\n      title:'Sair',\n      path:'/sair',\n      icon:<FiLogOut.FiLogOut/>,\n      cName:'nav-text'\n  }\n    \n];","/Users/arleysouto/Documents/Plataforma-Iot/Aplicacao/src/store/functions.js",["225","226","227"],"import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n\nexport function GetDadosDevice(){\n    const selectedDevice = useSelector((state) => state.devicesState.selectedDevice);\n    const devices = useSelector((state) => state.devicesState.devices);\n    const dadosDevice = useSelector((state) =>  state.devicesState.dadosDevice);\n\n    useEffect(() => {}, [selectedDevice, dadosDevice])\n   \n    //alert( JSON.stringify( dadosDevice[0] ))\n\n    return {device: (devices.length > 0) ? (selectedDevice === '' ? devices[0].device : devices.filter((dev) => dev.device === selectedDevice)[0].device) : \"\",\n        dadosDevice: dadosDevice,\n        propsDevice: (dadosDevice.length > 0) ? Object.keys(dadosDevice[0]) : []}\n}\n\nexport function getDate(unixTimestamp){\n    const dateObject = new Date(unixTimestamp * 1000)\n    const humanDateFormat = dateObject.toLocaleString() //20/04/2021 10:30:15\n\n    return humanDateFormat\n}",{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":6,"column":8,"nodeType":"234","messageId":"235","endLine":6,"endColumn":12},{"ruleId":"232","severity":1,"message":"236","line":7,"column":8,"nodeType":"234","messageId":"235","endLine":7,"endColumn":12},{"ruleId":"232","severity":1,"message":"237","line":1,"column":16,"nodeType":"234","messageId":"235","endLine":1,"endColumn":24},{"ruleId":"232","severity":1,"message":"238","line":2,"column":23,"nodeType":"234","messageId":"235","endLine":2,"endColumn":32},{"ruleId":"232","severity":1,"message":"239","line":2,"column":34,"nodeType":"234","messageId":"235","endLine":2,"endColumn":37},{"ruleId":"232","severity":1,"message":"240","line":2,"column":39,"nodeType":"234","messageId":"235","endLine":2,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":14,"column":21,"nodeType":"243","endLine":14,"endColumn":64},{"ruleId":"232","severity":1,"message":"239","line":2,"column":17,"nodeType":"234","messageId":"235","endLine":2,"endColumn":20},{"ruleId":"232","severity":1,"message":"240","line":2,"column":22,"nodeType":"234","messageId":"235","endLine":2,"endColumn":25},{"ruleId":"232","severity":1,"message":"244","line":4,"column":10,"nodeType":"234","messageId":"235","endLine":4,"endColumn":25},{"ruleId":"232","severity":1,"message":"245","line":4,"column":27,"nodeType":"234","messageId":"235","endLine":4,"endColumn":36},{"ruleId":"232","severity":1,"message":"246","line":12,"column":24,"nodeType":"234","messageId":"235","endLine":12,"endColumn":37},{"ruleId":"228","replacedBy":"247"},{"ruleId":"230","replacedBy":"248"},{"ruleId":"232","severity":1,"message":"249","line":3,"column":13,"nodeType":"234","messageId":"235","endLine":3,"endColumn":20},{"ruleId":"228","replacedBy":"250"},{"ruleId":"230","replacedBy":"251"},{"ruleId":"232","severity":1,"message":"237","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"232","severity":1,"message":"252","line":1,"column":27,"nodeType":"234","messageId":"235","endLine":1,"endColumn":36},{"ruleId":"232","severity":1,"message":"253","line":8,"column":20,"nodeType":"234","messageId":"235","endLine":8,"endColumn":24},{"ruleId":"232","severity":1,"message":"254","line":8,"column":26,"nodeType":"234","messageId":"235","endLine":8,"endColumn":32},{"ruleId":"241","severity":1,"message":"242","line":25,"column":21,"nodeType":"243","endLine":25,"endColumn":85},{"ruleId":"232","severity":1,"message":"255","line":8,"column":8,"nodeType":"234","messageId":"235","endLine":8,"endColumn":13},{"ruleId":"232","severity":1,"message":"256","line":9,"column":8,"nodeType":"234","messageId":"235","endLine":9,"endColumn":12},{"ruleId":"257","severity":1,"message":"258","line":19,"column":8,"nodeType":"259","endLine":19,"endColumn":24,"suggestions":"260"},{"ruleId":"232","severity":1,"message":"237","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"232","severity":1,"message":"253","line":2,"column":58,"nodeType":"234","messageId":"235","endLine":2,"endColumn":62},{"ruleId":"232","severity":1,"message":"261","line":7,"column":23,"nodeType":"234","messageId":"235","endLine":7,"endColumn":34},{"ruleId":"232","severity":1,"message":"262","line":8,"column":12,"nodeType":"234","messageId":"235","endLine":8,"endColumn":18},{"ruleId":"232","severity":1,"message":"240","line":2,"column":16,"nodeType":"234","messageId":"235","endLine":2,"endColumn":19},{"ruleId":"232","severity":1,"message":"254","line":2,"column":26,"nodeType":"234","messageId":"235","endLine":2,"endColumn":32},{"ruleId":"232","severity":1,"message":"263","line":2,"column":34,"nodeType":"234","messageId":"235","endLine":2,"endColumn":43},{"ruleId":"232","severity":1,"message":"264","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":18},{"ruleId":"232","severity":1,"message":"265","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":16},{"ruleId":"257","severity":1,"message":"266","line":24,"column":8,"nodeType":"259","endLine":24,"endColumn":14,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":67,"column":17,"nodeType":"243","endLine":67,"endColumn":149},{"ruleId":"270","severity":1,"message":"271","line":10,"column":1,"nodeType":"272","endLine":36,"endColumn":2},{"ruleId":"232","severity":1,"message":"273","line":4,"column":5,"nodeType":"234","messageId":"235","endLine":4,"endColumn":14},{"ruleId":"232","severity":1,"message":"274","line":10,"column":5,"nodeType":"234","messageId":"235","endLine":10,"endColumn":9},{"ruleId":"232","severity":1,"message":"275","line":11,"column":5,"nodeType":"234","messageId":"235","endLine":11,"endColumn":10},{"ruleId":"232","severity":1,"message":"276","line":12,"column":5,"nodeType":"234","messageId":"235","endLine":12,"endColumn":15},{"ruleId":"232","severity":1,"message":"277","line":13,"column":5,"nodeType":"234","messageId":"235","endLine":13,"endColumn":16},{"ruleId":"232","severity":1,"message":"278","line":17,"column":10,"nodeType":"234","messageId":"235","endLine":17,"endColumn":25},{"ruleId":"232","severity":1,"message":"279","line":17,"column":27,"nodeType":"234","messageId":"235","endLine":17,"endColumn":35},{"ruleId":"232","severity":1,"message":"280","line":18,"column":10,"nodeType":"234","messageId":"235","endLine":18,"endColumn":22},{"ruleId":"232","severity":1,"message":"281","line":19,"column":30,"nodeType":"234","messageId":"235","endLine":19,"endColumn":51},{"ruleId":"232","severity":1,"message":"282","line":21,"column":10,"nodeType":"234","messageId":"235","endLine":21,"endColumn":23},{"ruleId":"232","severity":1,"message":"283","line":21,"column":25,"nodeType":"234","messageId":"235","endLine":21,"endColumn":36},{"ruleId":"232","severity":1,"message":"284","line":35,"column":11,"nodeType":"234","messageId":"235","endLine":35,"endColumn":19},{"ruleId":"232","severity":1,"message":"285","line":39,"column":11,"nodeType":"234","messageId":"235","endLine":39,"endColumn":22},{"ruleId":"286","severity":1,"message":"287","line":131,"column":33,"nodeType":"288","messageId":"289","endLine":131,"endColumn":47},{"ruleId":"232","severity":1,"message":"252","line":1,"column":27,"nodeType":"234","messageId":"235","endLine":1,"endColumn":36},{"ruleId":"232","severity":1,"message":"290","line":2,"column":56,"nodeType":"234","messageId":"235","endLine":2,"endColumn":61},{"ruleId":"232","severity":1,"message":"291","line":3,"column":16,"nodeType":"234","messageId":"235","endLine":3,"endColumn":24},{"ruleId":"232","severity":1,"message":"292","line":7,"column":10,"nodeType":"234","messageId":"235","endLine":7,"endColumn":21},{"ruleId":"232","severity":1,"message":"283","line":8,"column":25,"nodeType":"234","messageId":"235","endLine":8,"endColumn":36},{"ruleId":"232","severity":1,"message":"293","line":15,"column":12,"nodeType":"234","messageId":"235","endLine":15,"endColumn":20},{"ruleId":"232","severity":1,"message":"294","line":15,"column":22,"nodeType":"234","messageId":"235","endLine":15,"endColumn":33},{"ruleId":"232","severity":1,"message":"295","line":16,"column":24,"nodeType":"234","messageId":"235","endLine":16,"endColumn":37},{"ruleId":"232","severity":1,"message":"296","line":77,"column":14,"nodeType":"234","messageId":"235","endLine":77,"endColumn":25},{"ruleId":"232","severity":1,"message":"237","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"232","severity":1,"message":"297","line":9,"column":10,"nodeType":"234","messageId":"235","endLine":9,"endColumn":32},{"ruleId":"257","severity":1,"message":"298","line":28,"column":8,"nodeType":"259","endLine":28,"endColumn":24,"suggestions":"299"},{"ruleId":"232","severity":1,"message":"300","line":4,"column":13,"nodeType":"234","messageId":"235","endLine":4,"endColumn":20},{"ruleId":"232","severity":1,"message":"301","line":6,"column":13,"nodeType":"234","messageId":"235","endLine":6,"endColumn":21},{"ruleId":"232","severity":1,"message":"302","line":1,"column":8,"nodeType":"234","messageId":"235","endLine":1,"endColumn":13},{"ruleId":"232","severity":1,"message":"262","line":12,"column":11,"nodeType":"234","messageId":"235","endLine":12,"endColumn":17},{"ruleId":"232","severity":1,"message":"303","line":13,"column":11,"nodeType":"234","messageId":"235","endLine":13,"endColumn":22},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'Side' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BsClipboardData' is defined but never used.","'BsGraphUp' is defined but never used.","'setNavigation' is assigned a value but never used.",["304"],["305"],"'FaIcons' is defined but never used.",["304"],["305"],"'useEffect' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Graph' is defined but never used.","'Mapa' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dadosDevice'. Either include it or remove the dependency array.","ArrayExpression",["306"],"'useDispatch' is defined but never used.","'device' is assigned a value but never used.","'FormCheck' is defined but never used.","'FiSearch' is defined but never used.","'Calendar' is defined but never used.","React Hook useEffect has missing dependencies: 'ano', 'dia', 'mes', and 'selectDevice'. Either include them or remove the dependency array.",["307"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Accordion' is defined but never used.","'Card' is defined but never used.","'Badge' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'BsFillTrashFill' is defined but never used.","'BsPencil' is defined but never used.","'FaPlusCircle' is defined but never used.","'IoMdArrowRoundForward' is defined but never used.","'cadastroEvery' is defined but never used.","'dadosDevice' is defined but never used.","'dispatch' is assigned a value but never used.","'dadosDevice' is assigned a value but never used.","no-dupe-keys","Duplicate key 'justifyContent'.","ObjectExpression","unexpected","'Modal' is defined but never used.","'Redirect' is defined but never used.","'useSelector' is defined but never used.","'cadastro' is assigned a value but never used.","'setCadastro' is assigned a value but never used.","'setOperations' is assigned a value but never used.","'onOrdemByte' is defined but never used.","'MdPhotoSizeSelectLarge' is defined but never used.","React Hook useEffect has missing dependencies: 'handleDevices' and 'selectData'. Either include them or remove the dependency array.",["308"],"'IoIcons' is defined but never used.","'BiMapPin' is defined but never used.","'React' is defined but never used.","'propsDevice' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [dadosDevice, selectedDevice]",{"range":"315","text":"316"},"Update the dependencies array to be: [ano, data, dia, mes, selectDevice]",{"range":"317","text":"318"},"Update the dependencies array to be: [handleDevices, selectData, selectedDevice]",{"range":"319","text":"320"},[956,972],"[dadosDevice, selectedDevice]",[816,822],"[ano, data, dia, mes, selectDevice]",[1050,1066],"[handleDevices, selectData, selectedDevice]"]